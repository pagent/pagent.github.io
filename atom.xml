<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Pagent]]></title>
  <subtitle><![CDATA[GitHub Pages＋静的サイトジェネレーターでブログ]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://pagent.github.io/"/>
  <updated>2014-11-25T11:53:47.723Z</updated>
  <id>http://pagent.github.io/</id>
  
  <author>
    <name><![CDATA[Pagent]]></name>
    
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Octopress→Hexo移行のプラグイン「hexo-migrator-octopress」を試してみた]]></title>
    <link href="http://pagent.github.io/2014/11/25/hexo-migrator-octopress/"/>
    <id>http://pagent.github.io/2014/11/25/hexo-migrator-octopress/</id>
    <published>2014-11-25T09:20:00.000Z</published>
    <updated>2014-11-25T11:12:38.000Z</updated>
    <content type="html"><![CDATA[<p>OctopressとHexoでは記事ソースのファイルの形式やFront Matter（<code>---</code>で区切られた、title、dateなどの部分）が微妙に異なる。<br>OctopressのcategoriesはHexoではtagsに相当したり。  </p>
<p>Octopressの記事ソースをHexoに取り込む<a href="https://github.com/sailxjx/hexo-migrator-octopress" target="_blank" rel="external">「hexo-migrator-octopress」</a>というHexo用プラグインがあったので、試してみた。<br>（Hexoの記事ソースをOctopress用に変換するスクリプト「Hexo to Octopress Converter」とは逆向き。）<br><a id="more"></a><br>デスクトップ上にhexo-test（Hexoフォルダ）とoctopress-test（Octopressフォルダ）を作った。  </p>
<p>hexo-testで端末を開き、プラグインをインストール。  </p>
<pre><code><span class="variable">$ </span>npm install hexo-migrator-octopress
</code></pre><p>コマンド<code>hexo migrate octopress &lt;source&gt;</code>で記事ソースが変換され、Hexoに取り込まれる。（<code>&lt;source&gt;</code>はOctopressフォルダへのパス）<br>今回のテスト環境では</p>
<pre><code><span class="variable">$ </span>hexo migrate octopress ~<span class="regexp">/Desktop/octopress</span>-test
</code></pre><p>/octopress-test/source/_posts/2014-10-25-cosmos.markdownが/hexo-test/source/_posts/cosmos.mdとして取り込まれた。<br>（Hexoのデフォルト設定に従い、日付けが削除さるようだ。）  </p>
<p>Front MatterはOctopressの  </p>
<pre><code><span class="bullet">---
</span>layout: post
title: "畑一面のコスモスはなぜ？"
date: 2014-10-25 15:41:22 +0900
comments: true
categories:
<span class="bullet">- </span>未分類
<span class="header">- 写真
---</span>
</code></pre><p>から  </p>
<pre><code><span class="bullet">---
</span>layout: post
title: "畑一面のコスモスはなぜ？"
date: 2014-10-25 15:41:22 +0900
comments: true
tags:
<span class="bullet">- </span>未分類
<span class="header">- 写真
---</span>
</code></pre><p>に変換されたが、変更は<code>categories:</code>が<code>tags:</code>になっただけのようだ。  </p>
<p>この状態でもHexoで使えるのだが、これを「Hexo to Octopress Converter」でOctopress用に再変換すると  </p>
<pre><code><span class="bullet">---
</span>layout: post
<span class="header">comments: true
---</span>
layout: post
title: "畑一面のコスモスはなぜ？"
date: 2014-10-25 15:41:22 +0900
comments: true
tags:
<span class="bullet">- </span>未分類
<span class="header">- 写真
---</span>
</code></pre><p>となってしまい、<code>tags:</code>が<code>categories:</code>に変換されない。  </p>
<p>上部の<code>---</code>を削除しておくと<code>categories:</code>に変換はされたが、タイトルの部分が<code>title: &quot;&quot;畑一面のコスモスはなぜ？&quot;&quot;</code>と「”」が重複しまい、rake generateでエラーになる。  </p>
<p>結局、Octopress用に再変換する場合には、「hexo-migrator-octopress」でHexo用に変換したものを手作業で  </p>
<pre><code>title: 畑一面のコスモスはなぜ？
date: 2014-10-25 15:41:22 +0900
tags:
<span class="bullet">- </span>未分類
<span class="header">- 写真
---</span>
</code></pre><p>のように変更しておく必要がありそうだ。<br>それにOctopressでcategoriesとtagsを両方使っていた場合は変換後<code>tags:</code>が重複してしまう。  </p>
<p>それから、Hexoの新規記事ソースはデフォルトでは日付けがつかないが、_config.ymlの<code>new_post_name:</code>で日付けをつけることが出来る。<br>日付けがあった方が同じタイトルの記事を複数書けたり、過去記事編集の際に探し易かったりと、なにかと都合が良い。  </p>
<p>Octopressの方のファイル拡張子が.markdownではなく.mdなら「Hexo to Octopress Converter」で変換しても日付けが削除されないので、前もって.mdに変えておいた方が良いかもしれない。<br>拡張子が.mdでも<code>tags:</code>は<code>categories:</code>に変換される。  </p>
<p>拡張子の一括変換は/_postsディレクトリで  </p>
<pre><code>$ <span class="built_in">rename</span> <span class="string">'s/.markdown/.md/'</span> *.markdown
</code></pre><p>とするか、ファイルマネージャーThunarを使えば簡単のようだ。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>OctopressとHexoでは記事ソースのファイルの形式やFront Matter（<code>---</code>で区切られた、title、dateなどの部分）が微妙に異なる。<br>OctopressのcategoriesはHexoではtagsに相当したり。  </p>
<p>Octopressの記事ソースをHexoに取り込む<a href="https://github.com/sailxjx/hexo-migrator-octopress" target="_blank" rel="external">「hexo-migrator-octopress」</a>というHexo用プラグインがあったので、試してみた。<br>（Hexoの記事ソースをOctopress用に変換するスクリプト「Hexo to Octopress Converter」とは逆向き。）<br>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://pagent.github.io/tags/Hexo/"/>
    
      <category term="Octopress" scheme="http://pagent.github.io/tags/Octopress/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[WindowsでHexoを使う（deploy）]]></title>
    <link href="http://pagent.github.io/2014/11/24/hexo-windows-deploy/"/>
    <id>http://pagent.github.io/2014/11/24/hexo-windows-deploy/</id>
    <published>2014-11-24T11:31:27.000Z</published>
    <updated>2014-11-25T05:26:29.000Z</updated>
    <content type="html"><![CDATA[<p>Windows 7にインストールしたHexoだが、作業フォルダはLinuxと共用なので、そのままdeploy出来るかと思ったが、  </p>
<pre><code>Run

  git config --global <span class="literal">user</span>.email <span class="string">"you@example.com"</span>
  git config --global <span class="literal">user</span>.name <span class="string">"Your Name"</span>
</code></pre><p>と言われてしまった。<br><a id="more"></a><br>メールアドレスとGithubユーザー名を設定してdeployしようとしたが、  </p>
<pre><code>Permission denied (publickey).
fatal: Could <span class="operator">not</span> <span class="built_in">read</span> <span class="built_in">from</span> remote repository.

Please make sure you have <span class="operator">the</span> correct access rights
<span class="operator">and</span> <span class="operator">the</span> repository exists.
</code></pre><p>とrejectされる。  </p>
<p>SSHキーの設定が必要のようなので、Linuxで設定したSSH公開鍵を<code>C:\Users\（ユーザー名）\.ssh</code>にコピペしたが、やはりrejectされる。<br>秘密鍵もコピペしたら、ようやくdeploy出来た。<br>これで無事WindowsでもHexoを使えるようになった。  </p>
<p>Hexoにはローカルホストで使う管理画面プラグインもあるようなので、もう少し導入が簡単になればWindowsユーザーにも「静的サイトジェネレーター」が広まる可能性がありそうだ。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Windows 7にインストールしたHexoだが、作業フォルダはLinuxと共用なので、そのままdeploy出来るかと思ったが、  </p>
<pre><code>Run

  git config --global <span class="literal">user</span>.email <span class="string">"you@example.com"</span>
  git config --global <span class="literal">user</span>.name <span class="string">"Your Name"</span>
</code></pre><p>と言われてしまった。<br>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://pagent.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[WindowsでHexoを使う（インストール）]]></title>
    <link href="http://pagent.github.io/2014/11/24/hexo-windows/"/>
    <id>http://pagent.github.io/2014/11/24/hexo-windows/</id>
    <published>2014-11-24T09:32:37.000Z</published>
    <updated>2014-11-25T05:26:47.000Z</updated>
    <content type="html"><![CDATA[<p>以前、静的サイトジェネレーターnanocをWindowsにインストールしたが、なんとかインストールは出来たものの、compile（generate）してhtmlファイルを生成する際、エラーになり使えなかった。<br>最近使い始めたHexoは、nanocやOctopressと違い、rubyではなくNode.jsで動いているそうなので、Windowsで使えるかもしれないと思い、試してみた。<br><a id="more"></a><br>結果、Windowsで実用可能だった。</p>
<h3 id="Node-jsのインストール">Node.jsのインストール</h3>
<p>Node.jsは下記からWindows用インストーラー付きのWindows Installer (.msi)をダウンロードし、デフォルトの設定のままインストールした。<br><a href="http://nodejs.org/download/" target="_blank" rel="external">http://nodejs.org/download/</a><br>バージョンはXubuntuに入れたのと同じv0.10.33だった。  </p>
<h3 id="msysgitのインストール">msysgitのインストール</h3>
<p>Windowsでgitを使うため<a href="http://msysgit.github.io/" target="_blank" rel="external">msysgit</a>をインストールした。<br>インストールオプションは下記サイトを参考にさせて頂いた。<br><a href="http://d.hatena.ne.jp/xyk/20130920/1379659991" target="_blank" rel="external">Windows に msysgit をインストールして git 環境を作る - xykの日記</a>  </p>
<p>「Select Components」ではすべてのチェックを外した。<br>「Adjusting your PATH environment」は上から2番目の「Run Git from the Windows Command Prompt」。<br>「Configuring the line ending conversions」は上から2番目の「Checkout as-is, commit Unix-style line endings」でインストールした。<br>だが、実際Hexoでdeployする際、  </p>
<pre><code>warning: LF will be replaced <span class="keyword">by</span> <span class="constant">CRLF</span> <span class="operator">in</span> css/style.css.
The <span class="built_in">file</span> will have its original <span class="built_in">line</span> endings <span class="operator">in</span> your working <span class="built_in">directory</span>.
warning: LF will be replaced <span class="keyword">by</span> <span class="constant">CRLF</span> <span class="operator">in</span> fancybox/helpers/jquery.fancybox-buttons.css.
The <span class="built_in">file</span> will have its original <span class="built_in">line</span> endings <span class="operator">in</span> your working <span class="built_in">directory</span>.
warning: LF will be replaced <span class="keyword">by</span> <span class="constant">CRLF</span> <span class="operator">in</span> fancybox/helpers/jquery.fancybox-buttons.js.
The <span class="built_in">file</span> will have its original <span class="built_in">line</span> endings <span class="operator">in</span> your working <span class="built_in">directory</span>.
...
</code></pre><p>と、改行コードが変更されるという警告が大量に表示されたので、結局上から3番目のオプション「Checkout as-is, commit as-is」（autocrlf = false）にした。<br>後から<code>C:\Users\（ユーザー名）\.gitconfig</code>で変更可能。  </p>
<h3 id="Hexoのインストール">Hexoのインストール</h3>
<p>コマンドプロンプトを開き、</p>
<pre><code>&gt;npm <span class="keyword">install</span> hexo -g
</code></pre><p>でインストール。</p>
<p>Linuxの時と同様、  </p>
<pre><code>npm WARN <span class="keyword">optional</span> dep failed, continuing fsevents@<span class="number">0.2</span>.<span class="number">0</span>
</code></pre><p>という警告が出たが、インストール完了。  </p>
<p>Hexoの作業フォルダを作るため、任意のフォルダを選択した状態で「SHIFT」キーを押しながら右クリック。<br>「コマンド ウィンドウをここで開く」でコマンドウィンドウを立ち上げ、  </p>
<pre><code>&gt;hexo init hexo-win
&gt;<span class="built_in">cd</span> hexo-win
&gt;npm install

&gt;hexo g
&gt;hexo s
</code></pre><p>ローカルホストに無事、新規ブログが立ち上がった。  </p>
<p>2回目の<code>hexo g</code>からは、なぜか  </p>
<pre><code>[delete] Deleted: archives\<span class="number">2014</span>\<span class="number">11</span>\index.html
[delete] Deleted: archives\index.html
<span class="keyword">...</span>

[create] Generated: archives/index.html (124ms)
[create] Generated: archives/<span class="number">2014</span>/index.html (63ms)
<span class="keyword">...</span>
</code></pre><p>と、一旦すべてのファイルを削除してからまたファイルを生成したというメッセージが表示される。<br>あまり気持ち良くはないが、実用上問題は無さそう。  </p>
<p>この後deployで少し躓いてしまったが、WindowsでHexoを使うことが出来た。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>以前、静的サイトジェネレーターnanocをWindowsにインストールしたが、なんとかインストールは出来たものの、compile（generate）してhtmlファイルを生成する際、エラーになり使えなかった。<br>最近使い始めたHexoは、nanocやOctopressと違い、rubyではなくNode.jsで動いているそうなので、Windowsで使えるかもしれないと思い、試してみた。<br>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://pagent.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexoの新規記事テンプレートを変更]]></title>
    <link href="http://pagent.github.io/2014/11/23/hexo-post-template/"/>
    <id>http://pagent.github.io/2014/11/23/hexo-post-template/</id>
    <published>2014-11-22T23:20:38.000Z</published>
    <updated>2014-11-25T05:26:57.000Z</updated>
    <content type="html"><![CDATA[<p>Hexoで新規記事を作ると、初期状態ではtitle、date、tagsの項目しか無いが、categoriesも使いたいので変更。<br>/scaffolds/post.mdに項目を追加するだけで出来た。<br>（<code>---</code>で区画された部分は「Front Matter」と言うらしい。）<br><a id="more"></a><br>またOctopressに戻ることもあるかもしれないので、Octopressの書式に倣ってlayout、commentsも加えた。  </p>
<pre><code><span class="bullet">---
</span>layout: post
title: ｛｛ title ｝｝      ## ｛｛  ｝｝は実際には半角英数
date: ｛｛ date ｝｝
comments: true
tags: 
<span class="header">categories: 
---</span>
</code></pre><p><code>hexo n test</code>すると下記内容のファイルが生成された。  </p>
<pre><code>layout: post
title: test
comments: true
date: 2014-11-23 09:15:51
tags:
<span class="header">categories:
---</span>
</code></pre><p>Octopressでは<code>comments: true</code>が無いとDisqusが表示されない。<br>Hexoではcommentsの項目が無くてもDisqusは表示されるが、<code>comments: false</code>にするとその記事だけDisqusの表示は消える。<br>記事によってコメント禁止にする時に便利かもしれない。  </p>
<p>/scaffolds/post.mdで上部にも<code>---</code>を加えたが、生成ファイルでは下部にしか<code>---</code>が無い。<br>これだとOctopressでは記事をちゃんとgenerate出来ないようだが、上部に<code>---</code>を付ける方法が分からない。<br>もしまたOctopressに戻ることがあったら、手作業するしかなさそうだ。  </p>
<p>ーー<br>（追記）<br>Hexoの/source/_posts内の記事ソースをOctopress形式のFront Matterに変換出力するスクリプトが公開されていた。<br><a href="https://github.com/ciffel/Hexo-to-Octopress-Converter" target="_blank" rel="external">ciffel/Hexo-to-Octopress-Converter</a>  </p>
<p>これを使うと上部の<code>---</code>、<code>layout: post</code>そして<code>comments: true</code>を付加してくれる。<br>さらにHexoの<code>tags:</code>が<code>categories:</code>にリネームされる。<br>（Hexoの<code>tags:</code>はOctopressの<code>categories:</code>に相当するようだ。）  </p>
<p>なので/scaffolds/post.mdは元の記載に戻した。  </p>
<pre><code>title: Hexoの新規記事テンプレートを変更
date: Sun Nov 23 2014 08:20:38 GMT+0900 (JST)
<span class="header">tags:
---</span>
</code></pre><p>OctopressからHexoへの移行には下記プラグインが対応していて、これを使うとOctopressのソースの<code>categories:</code>が<code>tags:</code>に変換される。<br><a href="https://github.com/sailxjx/hexo-migrator-octopress" target="_blank" rel="external">hexo-migrator-octopress</a>  </p>
<p>骨折り損だったが、Hexoでコメント禁止にしたい時は<code>comments: false</code>を加えれば良いというのが分かったのが収穫だった。<br>早めに気がついて良かった。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Hexoで新規記事を作ると、初期状態ではtitle、date、tagsの項目しか無いが、categoriesも使いたいので変更。<br>/scaffolds/post.mdに項目を追加するだけで出来た。<br>（<code>---</code>で区画された部分は「Front Matter」と言うらしい。）<br>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://pagent.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexoのアーカイブ、カテゴリーページを全文表示からリスト表示に]]></title>
    <link href="http://pagent.github.io/2014/11/23/hexo-archve-category/"/>
    <id>http://pagent.github.io/2014/11/23/hexo-archve-category/</id>
    <published>2014-11-22T22:54:43.000Z</published>
    <updated>2014-11-25T05:27:05.000Z</updated>
    <content type="html"><![CDATA[<p>HexoのArchivesや各カテゴリーのページはデフォルトでは記事全文を表示するようになっている。<br>リスト表示の方が一覧を俯瞰出来て便利なので好みなのだが、カスタマイズの仕方がなかなか分からなかった。  </p>
<p>結局は_config.ymlのArchivesの項目で<br><a id="more"></a></p>
<pre><code><span class="preprocessor"># Archives</span>
<span class="preprocessor">## 2: Enable pagination</span>
<span class="preprocessor">## 1: Disable pagination</span>
<span class="preprocessor">## 0: Fully Disable</span>
archive: <span class="number">2</span>
category: <span class="number">2</span>
tag: <span class="number">2</span>
</code></pre><p>となっているところの値を、2から1に変更。  </p>
<pre><code><span class="preprocessor"># Archives</span>
<span class="preprocessor">## 2: Enable pagination</span>
<span class="preprocessor">## 1: Disable pagination</span>
<span class="preprocessor">## 0: Fully Disable</span>
archive: <span class="number">1</span>
category: <span class="number">1</span>
tag: <span class="number">1</span>
</code></pre><p>簡単にリスト表示（タイル形式）になった。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>HexoのArchivesや各カテゴリーのページはデフォルトでは記事全文を表示するようになっている。<br>リスト表示の方が一覧を俯瞰出来て便利なので好みなのだが、カスタマイズの仕方がなかなか分からなかった。  </p>
<p>結局は_config.ymlのArchivesの項目で<br>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://pagent.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexoのテーマを変更したら、元に戻せなくなった]]></title>
    <link href="http://pagent.github.io/2014/11/22/hexo-theme/"/>
    <id>http://pagent.github.io/2014/11/22/hexo-theme/</id>
    <published>2014-11-22T12:22:39.000Z</published>
    <updated>2014-11-25T05:27:24.000Z</updated>
    <content type="html"><![CDATA[<p>Hexoにはいろいろテーマがあるようで有難い。（なぜか中国人が作ったテーマが多い。）<br>元々入っていたデフォルトのテーマは「Landscape」だったので、とりあえずそれとは別のOfficial Themes、「Phase」と「Light」を試してみた。<br>試したはいいが、「Light」を入れてから元のテーマに戻そうとしたら戻せなくなってしまった。<br>「Light」が崩れたようなスタイルから変更出来ない。<br><a id="more"></a><br><code>hexo h</code>でヘルプを見ると、<code>clean</code>（Remove generated files and the cache）というコマンドオプションがあったので、<code>hexo clean</code>をしてみた。<br>書いてある通り/publicフォルダ自体も消えてしまったが、その後<code>hexo g</code>したらテーマも無事直った。  </p>
<p>消したのに、カウント数が(0)のまま表示されているカテゴリやタグも、<code>hexo clean</code>で直るようだ。  </p>
<p>ーー<br>テーマのCSSをカスタマイズする際にも、ローカルでの確認では問題ないが、いざdeployすると反映されていないようだ。<br>この時もいったん<code>hexo clean</code>すると良いようだ。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Hexoにはいろいろテーマがあるようで有難い。（なぜか中国人が作ったテーマが多い。）<br>元々入っていたデフォルトのテーマは「Landscape」だったので、とりあえずそれとは別のOfficial Themes、「Phase」と「Light」を試してみた。<br>試したはいいが、「Light」を入れてから元のテーマに戻そうとしたら戻せなくなってしまった。<br>「Light」が崩れたようなスタイルから変更出来ない。<br>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://pagent.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[サイトジェネレーターをOctopressからHexoに変更]]></title>
    <link href="http://pagent.github.io/2014/11/22/octopress-hexo/"/>
    <id>http://pagent.github.io/2014/11/22/octopress-hexo/</id>
    <published>2014-11-22T11:21:26.000Z</published>
    <updated>2014-11-25T05:27:15.000Z</updated>
    <content type="html"><![CDATA[<p>Github Pagesのブログに使っている静的サイトジェネレーターをOctopressからHexoに変更してみた。  </p>
<p>Octopressの/source/_posts内の記事ソースをそのままHexoの/source/_postsにコピーしたら、generateした時にパーマリンクが<code>http://.../2014/10/24/2014-10-24-xubuntu-blank-menu/</code>のように日付けが重複してしまった。<br>Hexoはデフォルトでは、新しく記事を作った時には日付けがつかず、生成する時に日付けを付加するようになっているらしい。<br><a id="more"></a><br>_config.ymlの  </p>
<pre><code><span class="comment"># Writing</span>
<span class="symbol">new_post_name:</span> <span class="symbol">:title</span>.md <span class="comment"># File name of new posts</span>
</code></pre><p>のところを  </p>
<pre><code><span class="symbol">new_post_name:</span> <span class="symbol">:year-</span><span class="symbol">:month-</span><span class="symbol">:day-</span><span class="symbol">:title</span>.md
</code></pre><p>に変更したら良いようだ。<br><a href="http://hexo.io/docs/migration.html" target="_blank" rel="external">Migration | Hexo</a>  </p>
<p>Octopressでは記事が/blogディレクトリ下に配置されるパーマリンクを使っていたが、今後はHexoのデフォルトの通りルート下に:year/:month/:day/:title/というパーマリンクを使うことにした。この方がシンプルで好みだし。<br>Githubでは.htaccessファイルを使ったリダイレクトが使用不可のようなので、以前の記事がリンク切れになるのは仕方がない。  </p>
<p>あと、下記記事を参考に、FeedとSitemapのプラグインを入れた。<br>プラグインの導入はとても簡単だった。<br><a href="http://liginc.co.jp/web/programming/server/104594" target="_blank" rel="external">所要時間3分!? Github PagesとHEXOで爆速ブログ構築してみよう！ | 株式会社LIG</a>  </p>
<p>Feedを導入すると、ヘッダー右上のアイコンでatom.xmlのページは表示出来たが、ブラウザのアドレスバーの端にフィードアイコンが表示されていない。  </p>
<p>/themes/landscape/layout/_partial/head.ejsの26行目、<code>link rel=&quot;alternative&quot;</code>を<code>link rel=&quot;alternate&quot;</code>に変更したら、アドレスバーにフィードアイコンが表示された。  </p>
<p>心配だったGithubへのdeployも、_config.ymlの<code># Deployment</code>の項目に記載するだけですんなりdeploy出来た。  </p>
<p>記事数が増えるに従い（増えたといっても、ほんの20数記事だが）、動作がもっさりして来たOctopressに較べ、generateが断然早くて軽快。<br>コマンドも<br><code>hexo generate</code>→<code>hexo g</code><br><code>hexo server</code>→<code>hexo s</code><br><code>hexo deploy</code>→<code>hexo d</code><br>で良いようだし、なかなか便利。  </p>
<p>ーー<br><code>hexo new</code>も<code>hexo n</code>でいいみたいで、<code>hexo deploy -g</code>は<code>hexo d -g</code>で良いようだ。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Github Pagesのブログに使っている静的サイトジェネレーターをOctopressからHexoに変更してみた。  </p>
<p>Octopressの/source/_posts内の記事ソースをそのままHexoの/source/_postsにコピーしたら、generateした時にパーマリンクが<code>http://.../2014/10/24/2014-10-24-xubuntu-blank-menu/</code>のように日付けが重複してしまった。<br>Hexoはデフォルトでは、新しく記事を作った時には日付けがつかず、生成する時に日付けを付加するようになっているらしい。<br>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://pagent.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Xubuntuに静的サイトジェネレーターHexoを入れてみた]]></title>
    <link href="http://pagent.github.io/2014/11/21/hexo-xubuntu/"/>
    <id>http://pagent.github.io/2014/11/21/hexo-xubuntu/</id>
    <published>2014-11-21T04:56:19.000Z</published>
    <updated>2014-11-25T08:14:44.000Z</updated>
    <content type="html"><![CDATA[<p>Octopressでブログを書いていて、さして不満はないのだが、別の静的サイトジェネレーターに「Hexo」というのがあるのを知った。<br>Octopressに較べ、テーマも豊富に用意あり、日本語のURLやカテゴリー名にも対応しているようだったので、入れてみた。<br>rubyではなく、Node.jsというのを使うらしい。<br><a id="more"></a><br>導入には下記サイトなどを参考にさせて頂いた。<br><a href="http://tech.admax.ninja/2014/09/11/environment-of-hexo/" target="_blank" rel="external">【Node.js】Hexoでブログを書くための環境構築 | AdMax Tech Blog</a>  </p>
<p>概ね上記サイトの通りに進めたらいいようだったが、Xubuntu14.04の環境では若干うまく行かないところがあった。  </p>
<p>nodeにパスを通す際、~/.bash_profileというファイルが見つからなかったので、~/.profileに  </p>
<pre><code><span class="keyword">if</span> <span class="string">[[ -s ~/.nvm/nvm.sh ]]</span>;
<span class="keyword">then</span> source ~/.nvm/nvm.sh
fi
</code></pre><p>を追記したが、これでは駄目なようで、ターミナルを起動する度にnvmというコマンドが見つからないと言われる。  </p>
<p>どうやら~/.bashrcに追記しないと駄目なようだった。<br><a href="http://d.hatena.ne.jp/white_chi/20111101/1320097898" target="_blank" rel="external">Ubuntu11.10で、nvmからnode.jsをインストールする - ホワイトぼーど</a>  </p>
<p>Hexoをインストールするところで  </p>
<pre><code>npm WARN <span class="keyword">optional</span> dep failed, continuing fsevents@<span class="number">0.2</span>.<span class="number">0</span>
</code></pre><p>と言われたが、問題なく使えるようだ。<br>途中うまく行かないので、下記サイトを参考に  </p>
<pre><code>curl -sL http<span class="variable">s:</span>//<span class="keyword">deb</span>.nodesource.<span class="keyword">com</span>/setup | sudo bash -

sudo apt-<span class="built_in">get</span> install -<span class="keyword">y</span> nodejs
</code></pre><p>とやったりしたが、果たしてこれが必要な操作だったのかどうかは不明。<br><a href="https://github.com/joyent/node/wiki/installing-node.js-via-package-manager" target="_blank" rel="external">Installing Node.js via package manager · joyent/node Wiki</a>  </p>
<p>しばらく試用してみて良ささそうだったら、Octopressから乗り換えるかもしれない。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Octopressでブログを書いていて、さして不満はないのだが、別の静的サイトジェネレーターに「Hexo」というのがあるのを知った。<br>Octopressに較べ、テーマも豊富に用意あり、日本語のURLやカテゴリー名にも対応しているようだったので、入れてみた。<br>rubyではなく、Node.jsというのを使うらしい。<br>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://pagent.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://pagent.github.io/2014/11/21/hello-world/"/>
    <id>http://pagent.github.io/2014/11/21/hello-world/</id>
    <published>2014-11-21T03:07:13.000Z</published>
    <updated>2014-11-21T03:07:13.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">trobuleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2>
<h3 id="Create_a_new_post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[2台目のPCのOctopressでdeploy出来ない]]></title>
    <link href="http://pagent.github.io/2014/11/20/octopress-deploy-rejected/"/>
    <id>http://pagent.github.io/2014/11/20/octopress-deploy-rejected/</id>
    <published>2014-11-20T10:11:54.000Z</published>
    <updated>2014-11-25T08:14:33.000Z</updated>
    <content type="html"><![CDATA[<p>DropboxでOctopressのフォルダを同期し、2台目のPCでもrake new_postやrake generateは出来るようになったが、rake deployが出来ない。<br>gitが入ってなかったので<code>sudo apt-get install git</code>し、<code>rake setup_github_pages</code>でセットアップしたが、  </p>
<pre><code><span class="input"><span class="prompt">! [rejected]        master -&gt;</span> master (non-fast-forward)</span>
</code></pre><p>とエラーになる。<br>SSHの公開鍵も設定したのだが。<br><a id="more"></a><br>検索したところ、Octopressで突然deploy出来なくなった時には、Rakefileを編集するという対処法があるらしい。<br><a href="http://qiita.com/takuma7/items/2d6f6e786eb6c0afbefb" target="_blank" rel="external">Octopressでrake deployした際にrejectedされた場合の対処 - Qiita</a>  </p>
<p>どうやら強制的にdeployするものらしい。  </p>
<p>上記記事の通り、Rakefileの268行目の<code>#</code>の前に<code>+</code>を付けて  </p>
<pre><code><span class="constant">Bundler</span>.with_clean_env { system <span class="string">"git push origin +<span class="subst">#{deploy_branch}</span>"</span> }
</code></pre><p>にすると、deploy出来た。  </p>
<p>元記事によると、deploy出来るようになった後は、Rakefileの編集を元に戻しておいた方がいいらしい。<br><a href="http://stackoverflow.com/questions/17609453/rake-gen-deploy-rejected-in-octopress" target="_blank" rel="external">rake gen_deploy rejected in Octopress - Stack Overflow</a>  </p>
<p>いったんdeploy出来るようになったら、その後はRakefileを元に戻してもdeploy出来る。  </p>
<p>記事ではoctopress/_deployディレクトリで<code>git pull origin master</code>というコマンドを使う回答もあった。<br>機会があれば今度試してみようと思う。  </p>
<p>gitがなんなのかよく分からないが、FTPでアップロードしていた時に較べるとブログの更新も楽だし、スマートな感じがする。<br>でもほんと、gitってよく分からない。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>DropboxでOctopressのフォルダを同期し、2台目のPCでもrake new_postやrake generateは出来るようになったが、rake deployが出来ない。<br>gitが入ってなかったので<code>sudo apt-get install git</code>し、<code>rake setup_github_pages</code>でセットアップしたが、  </p>
<pre><code><span class="input"><span class="prompt">! [rejected]        master -&gt;</span> master (non-fast-forward)</span>
</code></pre><p>とエラーになる。<br>SSHの公開鍵も設定したのだが。<br>]]>
    
    </summary>
    
      <category term="Octopress" scheme="http://pagent.github.io/tags/Octopress/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Installing libv8で止まる]]></title>
    <link href="http://pagent.github.io/2014/11/19/install-libv8/"/>
    <id>http://pagent.github.io/2014/11/19/install-libv8/</id>
    <published>2014-11-19T09:02:45.000Z</published>
    <updated>2014-11-25T08:14:23.000Z</updated>
    <content type="html"><![CDATA[<p>OctopressのフォルダをDropboxに置くことにしたので、古いネットブックにインストールしたXubuntuからOctopressを使えるかどうか試してみた。<br>だがrake previewしようとしたら、エラーになってしまった。<br>Octopressを使う環境が整っていないので当然といえば当然。<br><a id="more"></a><br>環境を整えるにあたり、bundle installで行き詰まってしまった。<br>途中    </p>
<pre><code><span class="title">Installing</span> libv8 (<span class="number">3.16.14.7</span>) 
</code></pre><p>の表示のところで動かない。<br>フリーズしたのかと思ったが検索したところ、libv8のインストールには時間が掛かるらしい。<br>確かにCPUの使用率も100%で、頑張ってはいるようだ。  </p>
<p>非力なマシンのせいか結局30分くらい掛かったろうか。<br>もう一度パスワード入力を求められ、その後またtherubyracer (0.12.1)のところで少し時間が掛かったが、ようやくYour bundle is complete!<br>Octopressを使えるようになった。  </p>
<p>ーー<br>使えるようになったと思ったら、deployが出来ない。  </p>
<pre><code>$ rake deploy
cp -r source/images/.gitkeeper <span class="keyword">public</span>/images/.gitkeeper
<span class="preprocessor">## Deploying branch to Github Pages </span>
<span class="preprocessor">## Pulling any updates from Github Pages </span>
cd _deploy
cd -
rm -rf _deploy/assets
rm -rf _deploy/atom.xml
rm -rf _deploy/blog
rm -rf _deploy/favicon.png
rm -rf _deploy/images
rm -rf _deploy/index.html
rm -rf _deploy/javascripts
rm -rf _deploy/posts
rm -rf _deploy/robots.txt
rm -rf _deploy/sitemap.xml
rm -rf _deploy/stylesheets

<span class="preprocessor">## Copying public to _deploy</span>
cp -r <span class="keyword">public</span>/. _deploy
cd _deploy

<span class="preprocessor">## Committing: Site updated at 2014-11-19 11:02:25 UTC</span>
sh: <span class="number">1</span>: git: not found

<span class="preprocessor">## Pushing generated _deploy website</span>

<span class="preprocessor">## Github Pages deploy complete</span>
cd -
</code></pre><p>拒否はされてないみたいだが、記事を投稿出来ない。<br>どこに問題があるのか、よく分からない。<br>generateもやたら遅いし、ちょっとしんどいかな。  </p>
<p>ーー<br>gitがインストールされてない？</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>OctopressのフォルダをDropboxに置くことにしたので、古いネットブックにインストールしたXubuntuからOctopressを使えるかどうか試してみた。<br>だがrake previewしようとしたら、エラーになってしまった。<br>Octopressを使う環境が整っていないので当然といえば当然。<br>]]>
    
    </summary>
    
      <category term="Octopress" scheme="http://pagent.github.io/tags/Octopress/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Debian WheezyにNemoをインストール]]></title>
    <link href="http://pagent.github.io/2014/11/18/debian-wheezy-nemo/"/>
    <id>http://pagent.github.io/2014/11/18/debian-wheezy-nemo/</id>
    <published>2014-11-18T00:51:22.000Z</published>
    <updated>2014-11-25T08:14:16.000Z</updated>
    <content type="html"><![CDATA[<p>ネットブックLaVie LightにDebian Wheezyをインストールした。<br>ウィンドウマネージャはXfceが好みなので、debian-7.7.0-i386-netinst.isoでインストールする際、”Advanced options” 、”Alternate desktop environments”でXfceを選択した。  </p>
<p>ファイルやフォルダを簡単に管理者権限で操作したいので、XfceデフォルトのファイルマネージャーThunarのアクションに「rootで開く」を追加し、gksuもインストールした。<br>だがrootで開こうとしても、認証画面は表示されるものの、フォルダやファイルを管理者権限で開くことが出来ない。<br><a id="more"></a><br>代わりにNemoをインストールしようとしたら、レポジトリにNemoが無かった。PCManFMも確かrootで開くメニューがあったのでインストールしてみたが、なぜかrootで開くメニューが無い。<br>困ってしまったが、Ubuntu 12.04 Preciseのレポジトリを追加することで、Nemoをインストール出来た。  </p>
<pre><code><span class="keyword">echo</span> <span class="string">"deb http://ppa.launchpad.net/noobslab/mint/ubuntu precise main"</span> | sudo tee -<span class="keyword">a</span> /etc/apt/sources.<span class="keyword">list</span>  
sudo apt-key adv --keyserver keyserver.ubuntu.<span class="keyword">com</span> --recv-<span class="built_in">keys</span> F59EAE4D  
sudo apt-<span class="built_in">get</span> <span class="keyword">update</span>  
sudo apt-<span class="built_in">get</span> install nemo  
</code></pre><p><a href="http://www.techlw.com/2013/12/install-nemo-file-manager-with.html" target="_blank" rel="external">Install Nemo file Manager with Extensions in Debian 7 Wheezy and its derivatives | Technology Linux World</a>  </p>
<p>Ubuntu 14.04 Trustyのレポジトリを入れた方が、Nemoのバージョンが新しくて良いかと思いやってみたが、「壊れたパッケージを修復出来ない」とかでNemoをインストール出来なかった。  </p>
<p>それと、Nemoを起動すると、デスクトップ上の右クリックでアプリケーションメニューを表示するのが出来なくなってしまう。<br>これでは少々不便なので、普段はThunarを使った方が良いかもしれない。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>ネットブックLaVie LightにDebian Wheezyをインストールした。<br>ウィンドウマネージャはXfceが好みなので、debian-7.7.0-i386-netinst.isoでインストールする際、”Advanced options” 、”Alternate desktop environments”でXfceを選択した。  </p>
<p>ファイルやフォルダを簡単に管理者権限で操作したいので、XfceデフォルトのファイルマネージャーThunarのアクションに「rootで開く」を追加し、gksuもインストールした。<br>だがrootで開こうとしても、認証画面は表示されるものの、フォルダやファイルを管理者権限で開くことが出来ない。<br>]]>
    
    </summary>
    
      <category term="Linux" scheme="http://pagent.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Xubuntu 14.04.1で無線LAN(Atheros AR9285)が安定しない]]></title>
    <link href="http://pagent.github.io/2014/11/13/xubuntu-ar9285/"/>
    <id>http://pagent.github.io/2014/11/13/xubuntu-ar9285/</id>
    <published>2014-11-13T08:33:12.000Z</published>
    <updated>2014-11-25T08:14:08.000Z</updated>
    <content type="html"><![CDATA[<p>Xubuntu 14.04.1をインストールしたネットブックLaVie Light BL300/T。<br>有線でのネット接続は問題無いが、無線LANがとても不安定。<br>頻回に接続が切れて認証を要求されるし、接続も異様に遅い。<br>Xubuntu 12.04では問題なく使えていたのだが。  </p>
<p>どうも無線LANアダプターAtheros製AR9285とドライバーath9kの相性の問題もあるらしい。<br><a href="http://blog.livedoor.jp/furikku9310/archives/52298627.html" target="_blank" rel="external">ノートPCの無線LANデバイスにて : フレイドフォートonBlog</a><br><a id="more"></a><br>/etc/modprobe.d内にath9k.confというファイルを作りそこに<code>options ath9k nohwcrypt=1</code>と記載したり、ath9kをロードし直したりしてみたが改善しない。<br>NdisWrapperでWindows Xp用のドライバーを使えば良いかと思いやってみたが、これも満足に動作しない。  </p>
<p>Xubuntu 14.04.1にLinux 3.2や3.8カーネルをコンパイルしてインストールすれば良いのかもしれないが、自分の力量を超えているので断念。<br>（カーネルのコンパイルをしなくても、Ubuntu 12.04 Preciseのレポジトリを追加してLinux 3.2カーネルをインストールすれば良かったのかもしれない。<a href="/2014/11/18/debian-wheezy-nemo/">Debian WheezyにNemoをインストール</a>）  </p>
<p>結局Xubuntu 12.04をインストールしそれを14.04.1にアップグレード、起動カーネルをLinux 3.2にすることで無線LANも安定した。  </p>
<pre><code><span class="constant">GRUB_DEFAULT</span>=<span class="string">"Advanced options for Ubuntu&gt;Ubuntu, with Linux 3.2.0-58-generic"</span>
</code></pre><p>古いPCでもLinuxは利用出来ると言われるが、Linuxも新しい機器への対応を進める一方、古いPCは切り捨てられていくのだろうか。<br>使い勝手はUbuntu派生ディストリに劣るかもしれないが、今度Debian+Xfceも試してみようと思う。  </p>
<p>ーー<br>（追記）<br>lshwコマンドで見たところ、Xubuntu 12.04（Linux 3.2カーネル）でもAR9285に使われているドライバーはath9kだった。<br>なぜXubuntu 14.04.1の場合は無線が安定しないのだろう？<br>「disabling IRQ #9」回避のため、起動オプションに「pci=noacpi」を付けていたからだろうか。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Xubuntu 14.04.1をインストールしたネットブックLaVie Light BL300/T。<br>有線でのネット接続は問題無いが、無線LANがとても不安定。<br>頻回に接続が切れて認証を要求されるし、接続も異様に遅い。<br>Xubuntu 12.04では問題なく使えていたのだが。  </p>
<p>どうも無線LANアダプターAtheros製AR9285とドライバーath9kの相性の問題もあるらしい。<br><a href="http://blog.livedoor.jp/furikku9310/archives/52298627.html" target="_blank" rel="external">ノートPCの無線LANデバイスにて : フレイドフォートonBlog</a><br>]]>
    
    </summary>
    
      <category term="Linux" scheme="http://pagent.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[起動オプションを付けてXubuntu14.04.1をインストール]]></title>
    <link href="http://pagent.github.io/2014/11/11/xubuntu-install-option/"/>
    <id>http://pagent.github.io/2014/11/11/xubuntu-install-option/</id>
    <published>2014-11-11T09:39:48.000Z</published>
    <updated>2014-11-25T08:14:00.000Z</updated>
    <content type="html"><![CDATA[<p>NECのネットブックLaVie Light BL300/TにXubuntu14.04.1を再インストールした。<br>以前もXubuntu14.04.1をインストールしたがその時は<code>disabling IRQ #9</code>でインストールDVDを起動出来ず、いったんXubuntu13.04をインストールしてから、その後Xubuntu14.04.1にアップグレードしていた。<br>だが、起動オプションに<code>pci=noacpi</code>を加えれば、Linuxカーネル3.13.0-39でも起動出来るようだったので、起動オプションを付けてXubuntu14.04.1をインストールした。<br><a id="more"></a><br>Xubuntu14.04.1のインストールDVDを入れ、起動後「shift」キーを押し続けてオプションを表示。言語を日本語にした後「F6」キーで「その他のオプション」を表示。<br><code>acpi=off</code>、<code>noapic</code>、<code>nolapic</code>、<code>edd=on</code>、<code>nodmraid</code>、<code>nomodeset</code>等の起動オプションが選択出来るが、なにも選ばず「ESC」キーで選択画面を終了。（<code>acpi=off</code>では解像度が800×600に固定されてしまい、他のオプションでは<code>disabling IRQ #9</code>でインストールDVDを起動出来ない。）<br>下部に「起動オプション」の欄があり、キーボードで任意にオプションを入力出来るので、<code>quiet splash --</code>に続けて<code>pci=noacpi</code>と入力し「ENTER」で起動。<br>問題なくXubuntu14.04.1をインストール出来た。  </p>
<p>インストール後再起動すると、/etc/default/grubの</p>
<pre><code><span class="constant">GRUB_CMDLINE_LINUX_DEFAULT</span>=<span class="string">"quiet splash"</span>
</code></pre><p>の下にちゃんと</p>
<pre><code><span class="constant">GRUB_CMDLINE_LINUX_DEFAULT</span>=<span class="string">"pci=noacpi"</span>
</code></pre><p>の記載が加わっている。</p>
<p>Xubuntuの前にLubuntu14.04.1も試してみたが、確かにXubuntuに較べて動作はやや軽いような気はした。<br>だがLubuntuソフトウェアセンターというのが検索も出来ず使いづらいし、お気に入りアプリケーションの登録も不便だったりと、カスタマイズの自由度の低さからLubuntuは断念した。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>NECのネットブックLaVie Light BL300/TにXubuntu14.04.1を再インストールした。<br>以前もXubuntu14.04.1をインストールしたがその時は<code>disabling IRQ #9</code>でインストールDVDを起動出来ず、いったんXubuntu13.04をインストールしてから、その後Xubuntu14.04.1にアップグレードしていた。<br>だが、起動オプションに<code>pci=noacpi</code>を加えれば、Linuxカーネル3.13.0-39でも起動出来るようだったので、起動オプションを付けてXubuntu14.04.1をインストールした。<br>]]>
    
    </summary>
    
      <category term="Linux" scheme="http://pagent.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[いたづらにわがみ世にふる]]></title>
    <link href="http://pagent.github.io/2014/11/06/yonifuru/"/>
    <id>http://pagent.github.io/2014/11/06/yonifuru/</id>
    <published>2014-11-06T08:59:22.000Z</published>
    <updated>2014-11-25T08:13:50.000Z</updated>
    <content type="html"><![CDATA[<p>花の色はうつりにけりな  </p>
<p>いたづらにわがみ世にふる　ながめせしまに  </p>
<p>（古今和歌集　小野小町）</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>花の色はうつりにけりな  </p>
<p>いたづらにわがみ世にふる　ながめせしまに  </p>
<p>（古今和歌集　小野小町）</p>
]]>
    </summary>
    
      <category term="短歌" scheme="http://pagent.github.io/tags/%E7%9F%AD%E6%AD%8C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Firefoxの完全テーマ「MX3」を入れてみた]]></title>
    <link href="http://pagent.github.io/2014/11/05/firefox-complete-theme/"/>
    <id>http://pagent.github.io/2014/11/05/firefox-complete-theme/</id>
    <published>2014-11-05T09:13:55.000Z</published>
    <updated>2014-11-25T08:13:42.000Z</updated>
    <content type="html"><![CDATA[<p>ウェブ閲覧をしていて、画面があまり白いと目が疲れる。<br>モニターの輝度を調節したり、FirefoxのアドオンStylishでページのスタイルを強制的に変えることである程度対処は出来るが、Firefoxのブックマークや履歴などサイドバーの背景も少し暗くしたいところ。<br><a id="more"></a><br>以前はStylishを使ったり、プロファイルフォルダ内のuserChrome.cssに記述を追加するといった方法でFirefoxのメニューまわりの見た目をカスタマイズ出来たようなのだが、どのバージョンからかブックマーク欄の背景の変更が効かなくなっている。  </p>
<p>Firefoxのテーマで「完全テーマ」というのを使えばその辺も変更出来るようなので、いくつか試してみた。  </p>
<p>darkやmidnightと名前に付いている完全テーマは確かにブックマークの背景を黒くしてくれるのだが、真っ黒は真っ黒でかえって見づらい。<br>MX3というテーマを入れたら、うっすら灰色になっていい感じになった。  </p>
<p>ーー<br>（追記）<br>「MX4」もさらにシンプルでいいかも。  </p>
]]></content>
    <summary type="html">
    <![CDATA[<p>ウェブ閲覧をしていて、画面があまり白いと目が疲れる。<br>モニターの輝度を調節したり、FirefoxのアドオンStylishでページのスタイルを強制的に変えることである程度対処は出来るが、Firefoxのブックマークや履歴などサイドバーの背景も少し暗くしたいところ。<br>]]>
    
    </summary>
    
      <category term="ブラウザ" scheme="http://pagent.github.io/tags/%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[FirefoxのアドオンStylishでGyaoの背景色を黒くする]]></title>
    <link href="http://pagent.github.io/2014/11/03/gyao-background-color/"/>
    <id>http://pagent.github.io/2014/11/03/gyao-background-color/</id>
    <published>2014-11-03T07:29:59.000Z</published>
    <updated>2014-11-25T08:13:35.000Z</updated>
    <content type="html"><![CDATA[<p>Gyaoで動画を観るとき背景が白くてまぶしいので、FirefoxのアドオンStylishで背景を黒くした。  </p>
<p>Stylishに下記スタイルを適当な名前で追加するだけ。<br><a id="more"></a><br>    @namespace url(<a href="http://www.w3.org/1999/xhtml" target="_blank" rel="external">http://www.w3.org/1999/xhtml</a>);<br>    @-moz-document domain(“gyao.yahoo.co.jp”)<br>    ,domain(“youtube.com”)<br>    {</p>
<pre><code><span class="tag">body</span> <span class="rules">{
    <span class="rule"><span class="attribute">background-color</span>:<span class="value"><span class="hexcolor">#000</span></span></span>;
<span class="rule">}</span></span>
<span class="id">#playerModule</span> <span class="rules">{
    <span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">1px</span> solid <span class="hexcolor">#080808</span></span></span>;
<span class="rule">}</span></span>
<span class="class">.wrapperText</span> <span class="tag">h1</span> <span class="rules">{
    <span class="rule"><span class="attribute">color</span>:<span class="value"><span class="hexcolor">#BBB</span></span></span>;
<span class="rule">}</span></span>
}
</code></pre><p>YouTubeの背景はそれ程まぶしいと感じたことは無かったが、いちおうYouTubeのドメインも加えた。<br>ずいぶんと目にやさしくなった。</p>
<p>Stylishは対象のドメインを指定してスタイルを変えられるので、なにかと重宝している。  </p>
<p>ーー<br>（追記）<br>下記記事で紹介されているStylishのスタイル、Midnight Surfing - Global Dark Styleというのが、ページをとてもきれいに黒くしてくれる。<br><a href="http://www.xmisao.com/2014/08/08/dark-firefox.html" target="_blank" rel="external">Firefoxを徹底的に黒くする テーマ / Stylish / Vimperator — ぺけみさお</a>  </p>
<p>ただ、導入するとすべてのページが黒くなってしまうので、GyaoとYouTubeのドメインだけを指定した。<br>本当はツールバーやサイドバーなどFirefox自体の見た目も黒くなるはずらしいが、Firefox自体までは黒くならない。<br>最近のFirefoxのバージョンでは難しいようだ。  </p>
<p>というわけで、自分で書いた上記のスタイルはお蔵行きとなった。  </p>
<p>（追記2）<br>Solarized Dark Everywhereというスタイルも黒板っぽい色で落ち着く。<br>目が疲れた時のウェブ閲覧に良さそうだ。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Gyaoで動画を観るとき背景が白くてまぶしいので、FirefoxのアドオンStylishで背景を黒くした。  </p>
<p>Stylishに下記スタイルを適当な名前で追加するだけ。<br>]]>
    
    </summary>
    
      <category term="ブラウザ" scheme="http://pagent.github.io/tags/%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[xbacklightでモニター輝度を設定・調節]]></title>
    <link href="http://pagent.github.io/2014/11/02/xbacklight/"/>
    <id>http://pagent.github.io/2014/11/02/xbacklight/</id>
    <published>2014-11-02T09:55:00.000Z</published>
    <updated>2014-11-25T08:13:27.000Z</updated>
    <content type="html"><![CDATA[<p>Xubuntu起動時のモニター輝度を少し下げてみた。  </p>
<p>やり方は、/etc/default/grubで設定する方法、/etc/rc.localで設定する方法、xbacklightを使う方法などがあるようだ。<br><a href="https://sites.google.com/site/tetsuroweb/home/software/ubuntu/tips/display-brightness" target="_blank" rel="external">起動時の画面輝度を調整する (Ubuntu 12.04 - 14.04) - 哲朗web</a>  </p>
<p>まず、/etc/rc.localで設定する方法を試してみた。  <a id="more"></a><br>現在の輝度を変更するコマンドは<code>&gt;</code>の表示のまま止まってしまうので、</p>
<pre><code><span class="input"><span class="prompt">$ sudo -i

# echo 6 &gt;</span> /sys/<span class="class"><span class="keyword">class</span>/<span class="title">backlight</span>/<span class="title">acpi_video0</span>/<span class="title">brightness</span></span></span>
</code></pre><p>としないといけなかったが、それ以外は参照記事に記載してある通りの方法で、起動時のモニター輝度を変更できた。  </p>
<p>これで十分だったのだが、試しにxbacklightを入れてみたら、これがかなり便利な代物だった。<br><a href="http://x1japan.wordpress.com/2013/08/23/linux-keep-brightness-setting/" target="_blank" rel="external">目に優しい、LinuxMintやubuntuでモニター輝度を起動時に落とす設定。 | Woishin Journal</a>  </p>
<p>自動開始アプリケーションに<code>xbacklight -set 80</code>のようにコマンドを登録しておけば反映されるし、変更したい時も簡単に変更できる。  </p>
<p>輝度は0から100（パーセント）で設定するようなのだが、<code>xbacklight</code>と打って輝度を確認したところ、決まった値に近い切り下げ値にしかならないようだった。<br>自分の環境では、「14.285714」「28.571429」「42.857143」…と、およそ14の倍数になっていた。  </p>
<p>パネルに複数のランチャーをひとまとめに表示するクイックランチャー（外部）を追加し、コマンド<code>xbacklight -inc 15</code>と<code>xbacklight -dec 14</code>を追加したら、マウスクリックで簡単に輝度を上下できるようになった。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Xubuntu起動時のモニター輝度を少し下げてみた。  </p>
<p>やり方は、/etc/default/grubで設定する方法、/etc/rc.localで設定する方法、xbacklightを使う方法などがあるようだ。<br><a href="https://sites.google.com/site/tetsuroweb/home/software/ubuntu/tips/display-brightness" target="_blank" rel="external">起動時の画面輝度を調整する (Ubuntu 12.04 - 14.04) - 哲朗web</a>  </p>
<p>まず、/etc/rc.localで設定する方法を試してみた。  ]]>
    
    </summary>
    
      <category term="Linux" scheme="http://pagent.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[「disabling IRQ]]></title>
    <link href="http://pagent.github.io/2014/11/01/irq-problem/"/>
    <id>http://pagent.github.io/2014/11/01/irq-problem/</id>
    <published>2014-11-01T06:45:55.000Z</published>
    <updated>2014-11-25T08:13:18.000Z</updated>
    <content type="html"><![CDATA[<h4 id="環境">環境</h4>
<p>ハード：NECのネットブックLaVie Light BL300/T<br>OS：購入時のWindows Xpは削除していてXubuntu14.04.1のみ  </p>
<h4 id="現状と対応">現状と対応</h4>
<p>Xubuntu14.04.1のインストールの際にも「disabling IRQ #9」でインストールDVDが起動できず。起動オプションで「acpi=off」を選択したらインストールは出来たものの、解像度が800×600以外に選択出来なかった。<br>そのため、いったんXubuntu13.04をインストールしてから14.04.1にアップグレードしていた。<br>アップグレード中にもdisabling IRQで起動できなくなり、/etc/default/grubでGRUB_DEFAULT=”Advanced options for Ubuntu&gt;Ubuntu, with Linux 3.8.0-19-generic”にして、デフォルトの起動カーネルを3.8.0-19にしていた。<br><a id="more"></a><br>このままでも使えるが、ソフトウェアの更新がしょっちゅうカーネルを更新するよう言ってくるし、カーネル3.13で起動できないかやってみた。  </p>
<p>まず起動時にOS選択画面が出なかったが、他に起動できるOSがない場合grub2はOS選択画面をスキップしてしまうためらしい。<br><a href="http://www.serendip.ws/archives/3534" target="_blank" rel="external">Grub2 で起動時に選択リストを表示させる : Serendip - Webデザイン・プログラミング</a>  </p>
<p>上記記事の通り</p>
<pre><code><span class="comment">#GRUB_HIDDEN_TIMEOUT=0</span>
<span class="variable">GRUB_HIDDEN_TIMEOUT_QUIET=</span><span class="constant">false</span>
</code></pre><p>にしたらOS選択画面が出た。  </p>
<p>試してみる起動オプションは下記記事を参考にさせて頂いた。<br><a href="http://kiddushin.jugem.jp/?eid=264" target="_blank" rel="external">Disabling IRQ (起動には成功の巻) | おもしろきこともなき世をおもしろく</a>  </p>
<p>OS選択画面の「Advanced options for Ubuntu」で「Ubuntu, with Linux 3.13.0-39-generic」を選択し「e」キーでオプション編集画面へ。<br>linux /boot/vmlinuz-3.13.0-39…で始まる行の最後quiet nosplashのあとに半角スペースに続けてオプションを追加、「F10」キーで起動。<br>（参考記事：<a href="https://wiki.ubuntulinux.jp/UbuntuTips/Others/BootOptions#A.2BMKQw8zC5MMgw.2FDDrbggwfzC3MLkwxjDgMG6Nd1LVMKow1zC3MOcw8zCSTgBmQnaEMGtZCWb0MFkwizBrMG8-" target="_blank" rel="external">UbuntuTips/Others/BootOptions - Ubuntu Japanese Wiki</a>）  </p>
<h4 id="結果">結果</h4>
<p>acpi=off<br>起動は出来るが、画面が横に引き伸ばされてしまい、モニタの設定でも他の解像度を選べず。<br>シャットダウン時には「System halted」のスプラッシュ画面で止まってしまう。    </p>
<p>pci=noacpi<br>良好。<br>問題なく使えそう。  </p>
<p>acpi=noirq<br>一瞬起動できるかと思ったが画面が真っ暗のまま。  </p>
<p>irqpoll<br>上に同じく真っ暗。  </p>
<p>上記とは別にpci=routeirqというオプションも見かけたのでやってみたが、これは「disabling IRQ #9」で起動できず。  </p>
<p>pci=noacpiを起動オプションに加えることにしたので、/etc/default/grubで</p>
<pre><code><span class="constant">GRUB_CMDLINE_LINUX_DEFAULT</span>=<span class="string">"quiet nosplash pci=noacpi"</span>
</code></pre><p>とし、<code>sudo update-grub</code>した。  </p>
<p>ーー<br>（追記）<br>最初から「pci=noacpi」のオプションを付けてXubuntu14.04.1をインストールすることも可能だった。<br><a href="http://pagent.github.io/blog/2014/11/11/xubuntu-install-option/" target="_blank" rel="external">起動オプションを付けてXubuntu14.04.1をインストール - Pagent</a>  </p>
<p>この場合grubの記述は</p>
<pre><code><span class="constant">GRUB_CMDLINE_LINUX_DEFAULT</span>=<span class="string">"quiet splash"</span>
<span class="constant">GRUB_CMDLINE_LINUX_DEFAULT</span>=<span class="string">"pci=noacpi"</span>
</code></pre><p>となっていた。<br>スペース区切りで一行で書いても、改行してあらたにオプションを記述してもどちらでもいいようだ。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="環境">環境</h4>
<p>ハード：NECのネットブックLaVie Light BL300/T<br>OS：購入時のWindows Xpは削除していてXubuntu14.04.1のみ  </p>
<h4 id="現状と対応">現状と対応</h4>
<p>Xubuntu14.04.1のインストールの際にも「disabling IRQ #9」でインストールDVDが起動できず。起動オプションで「acpi=off」を選択したらインストールは出来たものの、解像度が800×600以外に選択出来なかった。<br>そのため、いったんXubuntu13.04をインストールしてから14.04.1にアップグレードしていた。<br>アップグレード中にもdisabling IRQで起動できなくなり、/etc/default/grubでGRUB_DEFAULT=”Advanced options for Ubuntu&gt;Ubuntu, with Linux 3.8.0-19-generic”にして、デフォルトの起動カーネルを3.8.0-19にしていた。<br>]]>
    
    </summary>
    
      <category term="Linux" scheme="http://pagent.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Firefoxで「閉じたタブを元に戻す」「最近閉じたタブ」がクリック出来ない]]></title>
    <link href="http://pagent.github.io/2014/11/01/firefox-closed-tabs/"/>
    <id>http://pagent.github.io/2014/11/01/firefox-closed-tabs/</id>
    <published>2014-11-01T01:02:58.000Z</published>
    <updated>2014-11-25T08:13:08.000Z</updated>
    <content type="html"><![CDATA[<p>いつの間にかXubuntu14.04.1のFirefoxで「閉じたタブを元に戻す」「最近閉じたタブ」が灰色になっていて選択出来なくなっていた。<br>Tab Mix Plusを無効化したら「閉じたタブを元に戻す」をクリックは出来るが、タブが戻らず機能しない。<br>プライベートウィンドウでも駄目。<br><a id="more"></a><br>Firefoxのバージョンが33.0に更新されてからかと、synapticから「バージョンの強制」で28.0にダウングレードしてみたが、やはり駄目。<br>他のXubuntuPCを見てみると、そちらではちゃんと「閉じたタブを元に戻す」「最近閉じたタブ」が機能している。  </p>
<p>Firefoxをインストールし直してみるしかなさそうなのでプロファイルも削除しておいた方が良いだろうかとプロファイルの保存場所を調べていたら、Firefoxにはリセット機能というのがあるようだった。<br><a href="https://support.mozilla.org/ja/kb/reset-firefox-easily-fix-most-problems" target="_blank" rel="external">Firefox をリセットするには | Firefox ヘルプ</a>  </p>
<p>結局このリセットで復旧できた。  </p>
<p>Firefoxをリセットしてもブックマークなどは残るが、アドオンは消去されてしまうので、「Firefox Sync」を利用した方が便利だと思う。<br>あとTab Mix Plusなど各種アドオンの設定もエクスポート出来るものは予めエクスポートしておいた方が良い。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>いつの間にかXubuntu14.04.1のFirefoxで「閉じたタブを元に戻す」「最近閉じたタブ」が灰色になっていて選択出来なくなっていた。<br>Tab Mix Plusを無効化したら「閉じたタブを元に戻す」をクリックは出来るが、タブが戻らず機能しない。<br>プライベートウィンドウでも駄目。<br>]]>
    
    </summary>
    
      <category term="Linux" scheme="http://pagent.github.io/tags/Linux/"/>
    
  </entry>
  
</feed>
