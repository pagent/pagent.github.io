<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Pagent]]></title>
  <subtitle><![CDATA[静的サイトジェネレーターとGitリポジトリでブログ]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://pagent.github.io/"/>
  <updated>2014-12-13T12:38:36.307Z</updated>
  <id>http://pagent.github.io/</id>
  
  <author>
    <name><![CDATA[Pagent]]></name>
    
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Qiitaは個人のブログじゃなかったのか]]></title>
    <link href="http://pagent.github.io/2014/12/13/qiita/"/>
    <id>http://pagent.github.io/2014/12/13/qiita/</id>
    <published>2014-12-13T05:19:07.000Z</published>
    <updated>2014-12-13T05:35:49.000Z</updated>
    <content type="html"><![CDATA[<p>Linuxや静的サイトジェネレーターなどで困ったことについて検索していると、Qiitaというサイトを目にする機会が増えた。<br>博学な人が居るものだと感心していたら、個人でやっているサイトではなく、プログラマー向けの情報共有サービスなんだね。<br><a href="https://qiita.com/about" target="_blank" rel="external">Qiitaについて - Qiita</a>  </p>
<p>記事を参考にさせてもらって助かったことは何度かあるが、自分自身はプログラマーじゃないし、何がどう便利なのか分からないので、利用しようという気にはならないが。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Linuxや静的サイトジェネレーターなどで困ったことについて検索していると、Qiitaというサイトを目にする機会が増えた。<br>博学な人が居るものだと感心していたら、個人でやっているサイトではなく、プログラマー向けの情報共有サービスなんだね。<br><a href="ht]]>
    </summary>
    
      <category term="ネット" scheme="http://pagent.github.io/tags/%E3%83%8D%E3%83%83%E3%83%88/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[特定語句を含むファイルの抽出とその一括変換]]></title>
    <link href="http://pagent.github.io/2014/12/12/bulk-change/"/>
    <id>http://pagent.github.io/2014/12/12/bulk-change/</id>
    <published>2014-12-12T04:44:46.000Z</published>
    <updated>2014-12-12T05:49:50.000Z</updated>
    <content type="html"><![CDATA[<p>repositoryは「リポジトリ」と表記するのが順当のよう。<br>「レポジトリ」としていた表記を「リポジトリ」に改めるため、ブログ投稿内で「レポジトリ」を用いているものを調べてみた。  </p>
<p>source/_postsで端末を開き、下記コマンドで抽出。  </p>
<pre><code>$ grep &quot;レポジトリ&quot; *
</code></pre><p>（参考：<a href="http://itpro.nikkeibp.co.jp/article/COLUMN/20060228/231140/" target="_blank" rel="external">Linuxコマンド逆引き大全 - 【 ファイルから文字列を検索する 】：ITpro</a>）  </p>
<p>たくさんあって手作業で修正するのは大変そうなので、下記コマンドですべての.mdファイル内の「レポジトリ」を「リポジトリ」に一括変換。（元ファイルは拡張子.bakを付けてバックアップ）  </p>
<pre><code>$ perl -p -i.bak -e &#39;s/レポジトリ/リポジトリ/g&#39; *.md
</code></pre><p>正常に変換されたことを確認後、.bakファイルを一括削除。  </p>
<pre><code>$ find ./ -type f -name &quot;*.bak&quot; -delete
</code></pre><p>もし不具合があれば、特定のファイルに対しては下記で復帰可能。<br>（example.md.bakをexample.mdに名称変更し上書き）  </p>
<pre><code>$ mv example.md.bak example.md
</code></pre><p>ただし、mvコマンドは複数のファイル名の一括変換は出来ないようなので、すべてのファイルを元に戻す場合は、一旦すべての.mdファイルを削除してから、すべての.md.bakファイルの拡張子を.mdに変換。<br>（renameコマンドは上書きは出来ないようなので）  </p>
<pre><code>$ find ./ -type f -name &quot;*.md&quot; -delete
$ rename &#39;s/.md.bak/.md/&#39; *.bak
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>repositoryは「リポジトリ」と表記するのが順当のよう。<br>「レポジトリ」としていた表記を「リポジトリ」に改めるため、ブログ投稿内で「レポジトリ」を用いているものを調べてみた。  </p>
<p>source/_postsで端末を開き、下記コマンドで抽出。  </]]>
    </summary>
    
      <category term="Linux" scheme="http://pagent.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[repositoryは「リポジトリ」？「レポジトリ」？]]></title>
    <link href="http://pagent.github.io/2014/12/12/repository/"/>
    <id>http://pagent.github.io/2014/12/12/repository/</id>
    <published>2014-12-12T04:33:33.000Z</published>
    <updated>2014-12-12T08:21:28.000Z</updated>
    <content type="html"><![CDATA[<p>repositoryは「レポジトリ」だと思い、そう記載していた。<br>だが「リポジトリ」の方が、どうやら原音に近いようだ。<br><a href="http://ejje.weblio.jp/content/repository" target="_blank" rel="external">repositoryの意味 - 英和辞典 Weblio辞書</a>  </p>
<p>英語が母国語らしい人の発音でも、人によっては「レポジトリ」に聞こえたりはするが。  </p>
<p>日本でも「リポジトリ」の表記の方が一般的のようなので、過去記事の記載をすべて「リポジトリ」に変更した。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>repositoryは「レポジトリ」だと思い、そう記載していた。<br>だが「リポジトリ」の方が、どうやら原音に近いようだ。<br><a href="http://ejje.weblio.jp/content/repository" target="_blank" rel=]]>
    </summary>
    
      <category term="Git" scheme="http://pagent.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[GitHub Pagesがサーバーメンテナンス]]></title>
    <link href="http://pagent.github.io/2014/12/11/github-pages-server-down/"/>
    <id>http://pagent.github.io/2014/12/11/github-pages-server-down/</id>
    <published>2014-12-11T09:30:49.000Z</published>
    <updated>2014-12-11T21:42:34.000Z</updated>
    <content type="html"><![CDATA[<p>今日何度か、GitHub Pagesのこのブログが表示されなかった。  </p>
<blockquote>
<p>GitHub Pages is temporarily down for maintenance.</p>
</blockquote>
<p>と表示されていて、サーバーのメンテナンスのよう。  </p>
<p><a href="http://www.downforeveryoneorjustme.com/" target="_blank" rel="external">Down For Everyone Or Just Me -&gt; Check if your website is down or up?</a>で調べた時には回復していた。  </p>
<p>pingコマンドでもサーバーの疎通を確認出来るようだ。<br>コマンドを実行すると延々pingが送信されるが、「CTRL」+「C」キーで停止すると結果が表示されるらしい。<br><a href="http://webkaru.net/linux/ping-command/" target="_blank" rel="external">Linuxコマンド【 ping 】ホストとの接続を確認 - Linux入門 - Webkaru</a>  </p>
<p>確認した時には「0% packet loss」だった。  </p>
<p>初めてだったので驚いたが、GitHub Pagesもメンテナンスするんだね。  </p>
<p>ーー<br>（追記）<br>その後も落ちたり回復したりの繰り返し。また、見られないページがあったり、Font Awesomeが文字化けしたりと不安定。<br>静的ページだし、信頼してたのに。  </p>
<p>大丈夫なんだろうか。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今日何度か、GitHub Pagesのこのブログが表示されなかった。  </p>
<blockquote>
<p>GitHub Pages is temporarily down for maintenance.</p>
</blockquote>
<p>と表示されていて、]]>
    </summary>
    
      <category term="Git" scheme="http://pagent.github.io/tags/Git/"/>
    
      <category term="ネット" scheme="http://pagent.github.io/tags/%E3%83%8D%E3%83%83%E3%83%88/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Briefの不具合（フィードを追加出来ない）]]></title>
    <link href="http://pagent.github.io/2014/12/10/brief/"/>
    <id>http://pagent.github.io/2014/12/10/brief/</id>
    <published>2014-12-10T10:09:09.000Z</published>
    <updated>2014-12-11T21:42:34.000Z</updated>
    <content type="html"><![CDATA[<p>FirefoxのRSSアドオン「Brief」の調子が突然おかしくなった。<br>新たにフィードを追加しても、一覧に表示されない。<br>brief.sqliteをリネームしたり、Briefをインストールし直してみたりしたが、改善せず。  </p>
<p>Briefの派生アドオン「Digest」も既に削除されており困ってしまったが、Briefのページ<a href="https://addons.mozilla.org/ja/firefox/addon/brief/?src=search" target="_blank" rel="external">Brief :: Add-ons for Firefox</a>の一番下に「開発チャンネル」というのがあった。<br>Version 2.0b1となっていて、どうやら開発版のよう。  </p>
<p>駄目もとでインストールしてみたら、新たに追加したフィードがちゃんと表示された。  </p>
<p>メニューは英語だし、信頼性にやや問題があるのかもしれないが、とりあえずは使えるので助かった。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>FirefoxのRSSアドオン「Brief」の調子が突然おかしくなった。<br>新たにフィードを追加しても、一覧に表示されない。<br>brief.sqliteをリネームしたり、Briefをインストールし直してみたりしたが、改善せず。  </p>
<p>Briefの派生アド]]>
    </summary>
    
      <category term="ブラウザ" scheme="http://pagent.github.io/tags/%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Linuxで「天気予報 - ウェザーニュース」が重すぎる]]></title>
    <link href="http://pagent.github.io/2014/12/10/weather-news/"/>
    <id>http://pagent.github.io/2014/12/10/weather-news/</id>
    <published>2014-12-10T00:53:08.000Z</published>
    <updated>2014-12-11T21:42:34.000Z</updated>
    <content type="html"><![CDATA[<p>見やすいし、週間天気予報や台風情報などもあって便利なので、ネットで天気予報を見る時は<a href="http://weathernews.jp/map/" target="_blank" rel="external">「天気予報 - ウェザーニュース」</a>を利用して来た。  </p>
<p>だがLinuxに移ってから、Firefoxで「ウェザーニュース」を開くと、とたんに重くなりFirefoxがフリーズする。<br>システムモニターを見ると、メモリ7.7GiBを使い果たしスワップを利用している。  </p>
<p>Flashを使っているからといって、なぜこんなに重くなるのだろうか。<br>動画サイトでもこんなことはないのに。  </p>
<p>Windowsでは大丈夫なので、Linux（Xubuntu）のFlash Playerのバージョンの問題かもしれない。  </p>
<p>仕方がないので「ウェザーニュース」は諦めて、<a href="http://www.tenki.jp/" target="_blank" rel="external">「日本気象協会 tenki.jp」</a>を使うことにした。<br>いちおう<a href="http://www.tenki.jp/week/" target="_blank" rel="external">「10日間天気」</a>というのもあるし。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>見やすいし、週間天気予報や台風情報などもあって便利なので、ネットで天気予報を見る時は<a href="http://weathernews.jp/map/" target="_blank" rel="external">「天気予報 - ウェザーニュース」</a>を利用して来]]>
    </summary>
    
      <category term="ネット" scheme="http://pagent.github.io/tags/%E3%83%8D%E3%83%83%E3%83%88/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[50桁まで計算出来るカシオのフリー計算がすごい]]></title>
    <link href="http://pagent.github.io/2014/12/09/casio/"/>
    <id>http://pagent.github.io/2014/12/09/casio/</id>
    <published>2014-12-09T09:49:41.000Z</published>
    <updated>2014-12-11T21:42:34.000Z</updated>
    <content type="html"><![CDATA[<p>普通の計算機で表示出来るのは10桁くらいまでだが、カシオのフリー計算はなんと50桁まで表示される。<br><a href="http://keisan.casio.jp/calculator" target="_blank" rel="external">高精度な高等関数が使えるフリー計算</a>  </p>
<p>たとえば、ヒトヨヒトヨニヒトミゴロの√2も  </p>
<pre><code>1.4142135623730950488016887242096980785696718753769
</code></pre><p>と表示される。<br>（普通にはコピペ出来ず、「要素を調査」しないとコピペ出来なかったが。）  </p>
<p>ヒトナミニオゴレヤ（√3）  </p>
<pre><code>1.7320508075688772935274463415058723669428052538104
</code></pre><p>フジサンロク（に）オオムナク（√5）も  </p>
<pre><code>2.2360679774997896964091736687312762354406183596115
</code></pre><p>他にも色々な計算が出来るようだ。<br>日常では必要無いと言えば無いのだが。  </p>
<p>生まれて初めて見た電子計算機（電卓）も、もちろんカシオだった。<br>起動時に点滅する緑色の液晶が滅茶苦茶かっこ良かった。  </p>
<p>やっぱりカシオはすごい。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>普通の計算機で表示出来るのは10桁くらいまでだが、カシオのフリー計算はなんと50桁まで表示される。<br><a href="http://keisan.casio.jp/calculator" target="_blank" rel="external">高精度な高等関数が]]>
    </summary>
    
      <category term="ネット" scheme="http://pagent.github.io/tags/%E3%83%8D%E3%83%83%E3%83%88/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[思い煩うな]]></title>
    <link href="http://pagent.github.io/2014/12/09/life/"/>
    <id>http://pagent.github.io/2014/12/09/life/</id>
    <published>2014-12-09T06:38:52.000Z</published>
    <updated>2014-12-11T21:42:34.000Z</updated>
    <content type="html"><![CDATA[<p>思い煩うな。人生など つかの間だ。</p>
<p>以前、「思い煩うな。人生は無意味なのだ。」という名言を見たことがあった。<br>誰の名言だったかと検索してみたら、どうやら英国の作家サマセット・モームのものらしい。<br>だが、原文が分からない。  </p>
<p>“The secret to life is meaningless unless you discover it yourself.”<br>（「Of Human Bondage」邦題：「人生の絆」より）<br><a href="https://www.goodreads.com/work/quotes/2547187-of-human-bondage" target="_blank" rel="external">Of Human Bondage Quotes by W. Somerset Maugham</a></p>
<p>はちょっと違うようだし。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>思い煩うな。人生など つかの間だ。</p>
<p>以前、「思い煩うな。人生は無意味なのだ。」という名言を見たことがあった。<br>誰の名言だったかと検索してみたら、どうやら英国の作家サマセット・モームのものらしい。<br>だが、原文が分からない。  </p>
<p>“The]]>
    </summary>
    
      <category term="ことば" scheme="http://pagent.github.io/tags/%E3%81%93%E3%81%A8%E3%81%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[枯れ葉]]></title>
    <link href="http://pagent.github.io/2014/12/05/kareha/"/>
    <id>http://pagent.github.io/2014/12/05/kareha/</id>
    <published>2014-12-05T09:59:21.000Z</published>
    <updated>2014-12-11T21:42:34.000Z</updated>
    <content type="html"><![CDATA[<p>からからとアスファルトの上枯れ葉転がり</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>からからとアスファルトの上枯れ葉転がり</p>
]]>
    </summary>
    
      <category term="短歌・俳句等" scheme="http://pagent.github.io/tags/%E7%9F%AD%E6%AD%8C%E3%83%BB%E4%BF%B3%E5%8F%A5%E7%AD%89/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HexoとOctopressの比較]]></title>
    <link href="http://pagent.github.io/2014/12/05/hexo-vs-octopress/"/>
    <id>http://pagent.github.io/2014/12/05/hexo-vs-octopress/</id>
    <published>2014-12-04T23:01:11.000Z</published>
    <updated>2014-12-13T12:38:22.000Z</updated>
    <content type="html"><![CDATA[<p>どちらもブログとしての体裁が整っていて、導入したらすぐ始められるHexoとOctopress。<br>しばらくHexoを使ってみて、Octopressと比較しての感想。（あくまで私見）  </p>
<h3 id="長所">長所</h3>
<h4 id="・generateが早い">・generateが早い</h4>
<p>Hexoの長所はなんと言ってもこれだろう。<br>手動での計測だが、30程の記事をgenerateするのに要した時間は、Octopressの12.5秒に対して、Hexoは2.3秒と5分の1以下だった。<br>今後、記事数や使っているタグ、カテゴリーが増えれば、Octopressの遅さはかなりのマイナス要因になると思われる。<br>Hexoはプレビュー時の反映も早い。  </p>
<h4 id="・デフォルトで日本語のタグ名（カテゴリー名）を使える">・デフォルトで日本語のタグ名（カテゴリー名）を使える</h4>
<p>Octopressでもカスタマイズすれば日本語のカテゴリー名を使えるようだが、デフォルト状態では漢字は中国語読みらしきローマ字表記に変換される。（たとえば、”未分類”は”wei-fen-lei”に。）<br>仮名はローマ字表記になるが、”の”は”false”に。「の（no）」をyes、noの”no”と判断する様。  </p>
<h4 id="・Windowsで使える">・Windowsで使える</h4>
<p>あくまで自分の環境でだが、Octopressが使っているRubyはWindowsで正常に動作しなかった。<br>一方、Hexo（JavaScript使用）はWindowsで使用可能だった。<br>WindowsにJekyllをインストールする方法も紹介されているので、環境によってはOctopressもWindows上で使えるのかもしれない。  </p>
<h4 id="・コマンドが簡単">・コマンドが簡単</h4>
<p><code>hexo new</code>→<code>hexo n</code>、<code>hexo generate</code>→<code>hexo g</code>、<code>hexo server</code>→<code>hexo s</code>、<code>hexo deploy</code>→<code>hexo d</code>の省略でコマンド可能。<br>辞書登録すればあまり関係ないが。  </p>
<h3 id="短所">短所</h3>
<h4 id="・中国製？">・中国製？</h4>
<p>使わせてもらっている身だが、なんかおもしろくない。  </p>
<h4 id="・FrontMatterの書式がOctopressと違う">・FrontMatterの書式がOctopressと違う</h4>
<p>他の静的サイトジェネレーターでもFrontMatter上部には<code>---</code>が入るのが一般的のよう。<br>この先、他の静的サイトジェネレーターに移行する可能性も考えると、ここは合わせて欲しかった。  </p>
<h4 id="・ユーザー数が少ない">・ユーザー数が少ない</h4>
<p><a href="https://staticsitegenerators.net/" target="_blank" rel="external">Static Site Generators</a>のStars（「いいね」みたいなものの）は、2014年12月5日時点で、Octopressの8522に対しHexoは3430とOctopressの半分以下。<br>（1位はOctopressの本家Jekyllが17578と圧倒的）<br>何か調べものをする時にも、特に日本語では、参考になるドキュメントは少なくなる。<br>Octopressより後発なので、今後増える可能性はある。  </p>
<h4 id="・コマンドがかっこ悪い">・コマンドがかっこ悪い</h4>
<p>ことある毎に<code>hexo</code>と連呼しないといけないのが、ちょっとかっこ悪い。  </p>
<h3 id="引き分け">引き分け</h3>
<h4 id="・テーマの豊富さ">・テーマの豊富さ</h4>
<p>自分の知る限りでは大差はない。<br>テーマの変更や微修正の容易さでは、Hexoに分があるよう。  </p>
<h4 id="・SEO">・SEO</h4>
<p>あまり違いは無さそう。<br>使っているテーマにもよるだろうし、記事の内容次第か。  </p>
<h4 id="・カテゴリーとタグのあつかい">・カテゴリーとタグのあつかい</h4>
<p>Octopressの”categories”はHexoでは”tags”に相当する。<br>複数設定した際、階層ではなく並列になる点からすると、”tags”としてあつかうHexoの方が自然な気はする。  </p>
<h3 id="結論">結論</h3>
<p>Node.js（JavaScript）の早さは魅力的なので、今後プログラミング言語がRubyの静的サイトジェネレーターに積極的に移ろうという気はしない。<br>自分のスキルが上がってMetalsmithを使いこなせるようになるか、他に良さそうな静的サイトジェネレーターが出てこない限り、今後もHexoを使うことになりそうだ。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>どちらもブログとしての体裁が整っていて、導入したらすぐ始められるHexoとOctopress。<br>しばらくHexoを使ってみて、Octopressと比較しての感想。（あくまで私見）  </p>
<h3 id="長所">長所</h3>
<h4 id="・generateが]]>
    </summary>
    
      <category term="Hexo" scheme="http://pagent.github.io/tags/Hexo/"/>
    
      <category term="Octopress" scheme="http://pagent.github.io/tags/Octopress/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Gitで”non-fast-forward”]]></title>
    <link href="http://pagent.github.io/2014/12/04/git-non-fast-forward/"/>
    <id>http://pagent.github.io/2014/12/04/git-non-fast-forward/</id>
    <published>2014-12-04T12:47:25.000Z</published>
    <updated>2014-12-11T21:42:34.000Z</updated>
    <content type="html"><![CDATA[<p>HexoのソースをBitbucketにcommitしようとしたら、  </p>
<pre><code>Your branch and &#39;bitbucket/master&#39; have diverged,
and have 1 and 1 different commit each, respectively.
  (use &quot;git pull&quot; to merge the remote branch into yours)

nothing to commit, working directory clean
</code></pre><p>と警告が出た。  </p>
<p>かまわずpushしたら、”master -&gt; master (non-fast-forward)”といってrejectされた。   </p>
<p>“git pull”を使え、ということのようなのでやってみたが、次の画面でなにをすれば良いのか分からない。  </p>
<p>なにもせず「CTRL」+「X」で終了して、もう一度addから試してみようとしたら、  </p>
<pre><code>このブランチは &#39;bitbucket/master&#39; よりも2コミット進んでいます。
  (use &quot;git push&quot; to publish your local commits)
</code></pre><p>とのこと。<br>言われた通り”git push”したら、今度はpush出来た。<br>「non-fast-forward」というのも検索してみたが、読んでもなんのことだかさっぱり。</p>
<p>便利なんだが、Gitは本当によく分からない。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>HexoのソースをBitbucketにcommitしようとしたら、  </p>
<pre><code>Your branch and &#39;bitbucket/master&#39; have diverged,
and have 1 and 1 different c]]>
    </summary>
    
      <category term="Git" scheme="http://pagent.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Bootstrapでページ内リンク先がナビゲーションバーに隠れる]]></title>
    <link href="http://pagent.github.io/2014/12/04/bootstrap-in-page-anchor-link/"/>
    <id>http://pagent.github.io/2014/12/04/bootstrap-in-page-anchor-link/</id>
    <published>2014-12-04T01:13:06.000Z</published>
    <updated>2014-12-11T21:42:34.000Z</updated>
    <content type="html"><![CDATA[<p>タグ一覧ページで、特定のタグをクリックしてページ内リンク先に移動すると、先頭部分がナビゲーションバーに隠れてしまっていた。  </p>
<p>検索すると下記記事が見つかった。</p>
<p><a href="http://blog.livedoor.jp/sonots/archives/28928405.html" target="_blank" rel="external">bootstrap の固定ナビゲーションとページ内アンカー問題 - sonots:blog</a>  </p>
<p>難しそうなのでナビゲーションバーを上部に固定（<code>navbar-fixed-top</code>）しているのをやめようかと思ったが、リンクされていたGithub上のissueを見るとCSSを使った対処法が紹介されていた。  </p>
<p><a href="https://github.com/twbs/bootstrap/issues/1768#issuecomment-46519033" target="_blank" rel="external">Navbar hides initial content when jumping to in-page anchor · Issue #1768 · twbs/bootstrap</a>  </p>
<p>その通りstyle.cssに追記すると、リンク先の先頭部分は表示されるようになったが、使っているナビゲーションバーの高さが狭いせいか、一つ前のタグの下の部分が少し表示されている。  </p>
<p>navbarのmin-heightに合わせて、75pxの箇所を50pxにしたら、ちょうど良い具合になった。  </p>
<pre><code>*[id]:before { 
  display: block; 
  content: &quot; &quot;; 
  margin-top: -50px; 
  height: 50px; 
  visibility: hidden; 
}
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>タグ一覧ページで、特定のタグをクリックしてページ内リンク先に移動すると、先頭部分がナビゲーションバーに隠れてしまっていた。  </p>
<p>検索すると下記記事が見つかった。</p>
<p><a href="http://blog.livedoor.jp/sonots/ar]]>
    </summary>
    
      <category term="Bootstrap" scheme="http://pagent.github.io/tags/Bootstrap/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexoで記事に画像を挿入する]]></title>
    <link href="http://pagent.github.io/2014/12/03/hexo-image/"/>
    <id>http://pagent.github.io/2014/12/03/hexo-image/</id>
    <published>2014-12-03T10:24:04.000Z</published>
    <updated>2014-12-11T21:42:34.000Z</updated>
    <content type="html"><![CDATA[<p>Hexoで画像を挿入する場合、画像を表示するためのタグはOctopressと同様で、  </p>
<pre><code>{(半角の%) img (class名) (画像へのパス) (幅) (高さ) (タイトル) %} 
</code></pre><p>例えば  </p>
<pre><code>{(半角の%) img /images/a0960_005150_r.jpg 480 360 コスモス %}  #class名は省略
</code></pre><p>で良いようだ。<br>代わりに下記のようなhtmlタグを使っても良い。  </p>
<pre><code>&lt;a href=&quot;/images/a0960_005150_r.jpg&quot; target=_blank&gt;&lt;img src=&quot;/images/a0960_005150_r.jpg&quot; alt=&quot;コスモス&quot; width=&quot;480&quot; height=&quot;360&quot;&gt;&lt;/a&gt;
</code></pre><p>OctopressではMarkdown式のタグだと、画像をクリックしたら原寸大で表示というのが出来なかったので、htmlタグの方が良いかと思ったが、Hexoの場合、Markdownタグで画像クリック→原寸大表示が出来るようだ。  </p>
<p>Hexoでは_config.ymlのWritingの箇所で<code>post_asset_folder</code>の値を<code>true</code>にするようを推奨している。<br><a href="http://hexo.io/docs/writing.html#Asset_Folder" target="_blank" rel="external">Writing | Hexo</a>  </p>
<p>説明通り<code>post_asset_folder: true</code>にして新規postを作ると、postフォルダ内に.mdファイルと同名のフォルダが作成される。<br>このフォルダに画像ファイルを入れよということらしい。<br>画像を多用する場合は整理に便利なのかもしれないが、ほとんど画像を使わない場合はかえって煩雑なので、source下にimagenなどのフォルダを作ってそこへ入れた方が便利そうだ。  </p>
<p>ーー<br>（追記）<br>テーマをFreewillにしたら画像が強制的に最大表示になってしまったので、freewill/source/css/style.cssのimgの箇所で<code>width: auto;</code>、<code>height: auto;</code>を削除した。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Hexoで画像を挿入する場合、画像を表示するためのタグはOctopressと同様で、  </p>
<pre><code>{(半角の%) img (class名) (画像へのパス) (幅) (高さ) (タイトル) %} 
</code></pre><p>例えば  </p>
<]]>
    </summary>
    
      <category term="Hexo" scheme="http://pagent.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HexoのテーマFreewillに月別アーカイブ]]></title>
    <link href="http://pagent.github.io/2014/12/03/hexo-freewill-monthly-archives/"/>
    <id>http://pagent.github.io/2014/12/03/hexo-freewill-monthly-archives/</id>
    <published>2014-12-03T07:55:43.000Z</published>
    <updated>2014-12-11T21:42:34.000Z</updated>
    <content type="html"><![CDATA[<p>サイドバーの種類にもよるが、Gitリポジトリを使ったブログにサイドバーを付けると、新規記事をdeployする際に更新するファイルが増えてしまって良くないように思う。  </p>
<p>先日入れたテーマFreewillはその辺を考慮してか、ページネーションのページ等どうしても更新せざるを得ないページにはサイドバーを置き、個別記事のページではサイドバー領域に投稿日やタグなどを表示するよう工夫されている。<br>実際、新規記事をdeployしても、過去の記事はcommitされていないようだ。  </p>
<p>ところで、Freewillには月別アーカイブが無かったので、入れることにした。  </p>
<p>デフォルトテーマのLandscapeのarchive.ejsをそのままfreewill/layout/_widget内にコピペすると、西暦の後ろに投稿数が隙間無しにくっついていて、見栄えが良くない。  </p>
<p>archive.ejsを修正、  </p>
<pre><code>&lt;% if (site.posts.length){ %&gt;
    &lt;div class=&quot;widget&quot;&gt;
        &lt;h4&gt;&lt;%= __(&#39;Monthly Archives&#39;) %&gt;&lt;/h4&gt;
        &lt;ul class=&quot;archive-list inline list-unstyled&quot;&gt;
        &lt;%- list_archives() %&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;% } %&gt;
</code></pre><p>freewill/source/css/style.cssにもスタイルを加えた。  </p>
<pre><code>/* Monthly Archives
---------------------------- */

.archive-list ul {
  padding:0 3px;
  list-style-type: none;
  line-height: 20px;
}
.archive-list-count {
    color: #888;
}
.archive-list-count:before {
    content: &quot; (&quot;;
}
.archive-list-count:after {
    content: &quot;)&quot;;
}
</code></pre><p>ちゃんとした知識が無く、見よう見まねなので、あまり良い記述ではないと思うが、自分としては十分満足。  </p>
<p>ーー<br>（追記）<br>Githubのコミット歴をよく見てみたら、同じタグを使っている過去記事も更新されるようだ。<br>個別記事ページのタグの箇所にそのタグを使っている記事数が表示されているせいだろう。  </p>
<p>タグクラウドやタグ一覧ページは良いとして、個別記事ページのタグには記事数は無い方が良さそうだ。  </p>
<p>freewill/layout/_partial/post/tag.ejsの5行目から<code>&lt;span&gt;&#39; + tag.length  + &#39;&lt;/span&gt;</code>を削除して、タグ名だけにした。  </p>
<pre><code>tags.push(&#39;&lt;li&gt;&lt;a href=&quot;&#39; + config.root + tag.path + &#39;&quot;&gt;&#39; + tag.name + &#39;&lt;/a&gt;&lt;/li&gt;&#39;);
</code></pre><p>これで様子を見てみようと思う。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>サイドバーの種類にもよるが、Gitリポジトリを使ったブログにサイドバーを付けると、新規記事をdeployする際に更新するファイルが増えてしまって良くないように思う。  </p>
<p>先日入れたテーマFreewillはその辺を考慮してか、ページネーションのページ等どうしても]]>
    </summary>
    
      <category term="Hexo" scheme="http://pagent.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexoの記事一覧ページにツイートボタン設置]]></title>
    <link href="http://pagent.github.io/2014/12/02/hexo-tweetbutton/"/>
    <id>http://pagent.github.io/2014/12/02/hexo-tweetbutton/</id>
    <published>2014-12-02T11:10:48.000Z</published>
    <updated>2014-12-11T21:42:34.000Z</updated>
    <content type="html"><![CDATA[<p>HexoのテーマをFreewill変えて、Disqusウィジェット内の「Share」にはTwitterのツイートボタンはあるが、それだと<code>http://disq.us/…</code>というDisqus経由の短縮URLになる様子。<br>普通のツイートボタンを設置したかったので、<a href="https://about.twitter.com/ja/resources/buttons" target="_blank" rel="external">Twitter公式のツイートボタン</a>を入れることにした。  </p>
<p>個別の記事への設置は、Twitterサイトで「ページのURLを使う」の設定で作成したコードを/layout/_partial/article.ejsの<code>&lt;%- item.content %&gt;</code>の下あたりに追記したら問題なく表示された。 　</p>
<p>だがそのコードをlayout/_partial/post/entry.ejsに挿入しても、トップページなどページネーションのページ（記事一覧のページ）では、ブログタイトルと一覧ページのURLにしかならない。<br>URLとツイート文を自分でカスタマイズする設定でコードを作成し、excerptリンクに倣って、それぞれ<code>&lt;%- config.root %&gt;&lt;%= item.path %&gt;</code>、<code>&lt;%= item.title %&gt;</code>で挿入しても、記事タイトルのみでURLを取得出来ない。  </p>
<p><del>試行錯誤の結果、ブログURLの箇所をパスではなく直接記載して、<code>http://…/&lt;%= item.path %&gt;</code>にしたら上手くいった。<br><code>&lt;%- config.root %&gt;</code>というパスがブログトップのURLを取得出来なかったようだが、理由は不明。<br>「Read More」（続きを読む）の部分では、ちゃんと変換されているが。</del>  </p>
<p>ーーーー<br>（<strong>追記</strong>）<br>個別記事URLへのパスは<code>&lt;%- item.permalink %&gt;</code>一つで良いようだ。<br>ーーーー  </p>
<p>記事を概要表示にしている時は「Read More」。全文表示にしている時はツイートボタンを表示することにして、read_moreの箇所を下記に変更した。  </p>
<pre><code>&lt;% if (item.excerpt &amp;&amp; index) { %&gt;
  &lt;a type=&quot;button&quot; href=&quot;&lt;%- config.root %&gt;&lt;%- item.path %&gt;#more&quot; class=&quot;btn btn-default more&quot;&gt;&lt;%= __(&#39;read_more&#39;) %&gt;&lt;/a&gt;
&lt;% } else { %&gt;
&lt;div class=&quot;tweet-button&quot;&gt;
  &lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-url=&quot;&lt;%- item.permalink %&gt;&quot; data-text=&quot;&lt;%= item.title %&gt;&quot;&gt;Tweet&lt;/a&gt;
  &lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&#39;http&#39;:&#39;https&#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&#39;://platform.twitter.com/widgets.js&#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &#39;script&#39;, &#39;twitter-wjs&#39;);&lt;/script&gt;
&lt;/div&gt;
&lt;% } %&gt;
</code></pre><p>ツイートボタンに対しては、source/css/style.cssに下記を追記、  </p>
<pre><code>.tweet-button {
  padding: 8px 0;
}
</code></pre><p>位置を調整した。  </p>
<p>（参考にさせて頂いた記事）<br><a href="http://imaizu.me/program/twbtn-on-jekyll-post.html" target="_blank" rel="external">jekyllのブログで投稿一覧ページにtwitterのボタンを置く - Taught by Myself</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>HexoのテーマをFreewill変えて、Disqusウィジェット内の「Share」にはTwitterのツイートボタンはあるが、それだと<code>http://disq.us/…</code>というDisqus経由の短縮URLになる様子。<br>普通のツイートボタンを設置]]>
    </summary>
    
      <category term="Hexo" scheme="http://pagent.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Gitリポジトリにディレクトリを追加]]></title>
    <link href="http://pagent.github.io/2014/12/01/git-add-directory/"/>
    <id>http://pagent.github.io/2014/12/01/git-add-directory/</id>
    <published>2014-12-01T14:27:34.000Z</published>
    <updated>2014-12-11T21:42:34.000Z</updated>
    <content type="html"><![CDATA[<p>HexoのソースはBitbucketで管理しているが、Hexoのテーマを変えたところ、commit出来なくなった。  </p>
<pre><code>Changes not staged for commit:
  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)
  (commit or discard the untracked or modified content in submodules)

    modified:   themes/freewill (modified content, untracked content)

no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)
</code></pre><p>と表示される。  </p>
<p>Bitbucketのソースを見ると、新しいテーマのディレクトリthemes/freewillは追加はされているが、クリックして開くことが出来ない。<br>何度かやり直してみたが、うまく行かない。  </p>
<p>ためしに適当なファイルを一つpushしたらどうかと、  </p>
<pre><code>$ git add themes/freewill/LICENSE
$ git commit -m &#39;修正&#39;
$ git push
</code></pre><p>とやったらLICENSEが追加され、freewillを開くことが出来た。<br>その後もう一度<code>git add .</code>し、commit、pushしたら、他のファイルやディレクトリも追加された。  </p>
<p>そう言えばリポジトリに初めてcommitした時も、一度contributors.txtというファイルをpushしてからでないとうまく行かなかった。<br>Gitというのはいきなりディレクトリ全体を追加するのは出来ない仕様なのかもしれない。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>HexoのソースはBitbucketで管理しているが、Hexoのテーマを変えたところ、commit出来なくなった。  </p>
<pre><code>Changes not staged for commit:
  (use &quot;git add &lt;file&g]]>
    </summary>
    
      <category term="Git" scheme="http://pagent.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HexoのテーマをBootstrap準拠のFreewillにした]]></title>
    <link href="http://pagent.github.io/2014/12/01/hexo-bootstrap/"/>
    <id>http://pagent.github.io/2014/12/01/hexo-bootstrap/</id>
    <published>2014-12-01T08:36:10.000Z</published>
    <updated>2014-12-11T21:42:34.000Z</updated>
    <content type="html"><![CDATA[<p>Hexoのテーマをデフォルトのものから、Bootstrap準拠の<a href="https://github.com/yieme/hexo-theme-freewill" target="_blank" rel="external">Freewill</a>にした。<br>BootstrapのテーマBootswatchというものを採用しているようで、外観を簡単に変更出来る。  </p>
<p>他のテーマ同様  </p>
<pre><code>git clone https://github.com/yieme/hexo-theme-freewill.git themes/freewill
</code></pre><p>でインストール。  </p>
<p>Freewillの_config.ymlで<code>bootswatch:</code>で種々のBootswatchテーマに変更出来る。<br>Bootswatchのナビゲーションバーには、テーマ毎に2種類のカラーバリエーションがあり、layout/_partial/navigation.ejsの2行目で<code>navbar-default</code>と<code>navbar-inverse</code>（逆の配色）のどちらかに切り替え可能。  </p>
<p>デフォルトの設定では画面をスクロールすると、ナビゲーションバーがフェードアウト、マウスを合わせるとフェードインする仕様になっていた。<br>出たり消えたりはかえって邪魔なので、source/js/main.jsの内容をすべて消去したらフェードアウトが無くなった。<br>navigation.ejs2行目の<code>navbar-fixed-top</code>を削除すると、スクロールとともにナビゲーションバーが上方に移動する。  </p>
<p>_config.ymlの表示不要な項目は先頭に<code>#</code>を付けてコメントアウト。  </p>
<p>テーマの変更でAtomフィードが表示されなくなってしまったが、freewill/_config.ymlの<code>rss: true</code>を<code>rss: atom.xml</code>に変更してナビゲーションバーに追加したら表示された。<br>layout/_partial/head.ejsのtheme.rssの箇所の<code>link rel=&quot;alternative&quot;</code>を<code>link rel=&quot;alternate&quot;</code>に変更。アドレスバーにもアイコンが表示された。  </p>
<p>Bootstrapのテーマらしく、すっきりしていて機能的な印象。  </p>
<p>ただ、paginationのページ上方にでかでかと表示されているJumbotronというのをどう使えばいいか分からない。<br>デフォルトではブログタイトルもしくはブログの説明が表示されるようだが。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Hexoのテーマをデフォルトのものから、Bootstrap準拠の<a href="https://github.com/yieme/hexo-theme-freewill" target="_blank" rel="external">Freewill</a>にした。<br]]>
    </summary>
    
      <category term="Hexo" scheme="http://pagent.github.io/tags/Hexo/"/>
    
      <category term="Bootstrap" scheme="http://pagent.github.io/tags/Bootstrap/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Gitリポジトリを利用したブログとサイドバー]]></title>
    <link href="http://pagent.github.io/2014/11/30/sidebar-git/"/>
    <id>http://pagent.github.io/2014/11/30/sidebar-git/</id>
    <published>2014-11-30T10:52:39.000Z</published>
    <updated>2014-12-11T21:42:34.000Z</updated>
    <content type="html"><![CDATA[<p>これまで、無料レンタルブログやWordPress、Octopressなどを使ったブログ含めて、ずっと右サイドバーの2コラムを好んで使って来た。  </p>
<p>ブログを始めた頃は今のように、サイドバーの無いブログはあまり見かけなかったし、サイドバーはあるのが当たり前と思っていた。<br>訪問者がサイドバーを見て他の記事も読んでくれるかもしれないし。  </p>
<p>普段使っているノートパソコンの右側にテンキーが付いていて、左に寄ってパソコンに向かうことになるので、記事が正面に来るよう、右サイドバーが都合が良かった。<br>両側サイドバーの3コラムは少しごちゃごちゃしている感じがして、好みではなかった。。  </p>
<p>スマホに合わせるといっても、レスポンシブルデザインならサイドバーが下に回ってくれるし、レンタルブログサービスではスマホ用のページも用意してくれている。<br>サイドバーの無いブログを見ても、正直なにが良いのかよく分からなかった。<br>だが、静的サイトジェネレーターで作ったブログをGithub Pagesにdeployするようになって、考えが変わって来た。  </p>
<p>サイドバーがあると、一つ記事を投稿しただけで、過去のすべての記事のサイドバーも変更される可能性がある。<br>「最近の記事」を表示している場合は当然そうだろうし、新たにタグやカテゴリーを追加した場合、それにカテゴリーや月別アーカイブの記事数が更新される場合も同様に違いない。<br>（JavaScriptを用いていたら大丈夫なのかもしれないが。）</p>
<p>これをdeployすると、すべての記事を更新することになってしまう。<br>これでは非効率だし、.deploy/.git/objectsの肥大化の原因にもなるはず。<br>サイドバーが下にある場合も同様だろう。</p>
<p>Github Pagesを使うなら、サイドバーは無い方が良さそうだ。<br>自分のことを思い返してみても、よほど興味のあるキーワードがある時以外は、サイドバーの項目をクリックすることはほとんど無いようだ。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>これまで、無料レンタルブログやWordPress、Octopressなどを使ったブログ含めて、ずっと右サイドバーの2コラムを好んで使って来た。  </p>
<p>ブログを始めた頃は今のように、サイドバーの無いブログはあまり見かけなかったし、サイドバーはあるのが当たり前と思っ]]>
    </summary>
    
      <category term="blog" scheme="http://pagent.github.io/tags/blog/"/>
    
      <category term="Git" scheme="http://pagent.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexoの固定ページを日付け無しに]]></title>
    <link href="http://pagent.github.io/2014/11/29/page-no-date/"/>
    <id>http://pagent.github.io/2014/11/29/page-no-date/</id>
    <published>2014-11-29T10:52:13.000Z</published>
    <updated>2014-12-11T21:42:34.000Z</updated>
    <content type="html"><![CDATA[<p>Hexoでは固定ページを作る際、コマンド<code>hexo new page （ページ名）</code>でsource/（ページ名）下にindex.mdが作成される。<br>tagsやcategoriesは使えないようになっている。<br>コメントを禁止にするには、Front Matterに<code>comments: false</code>を加えれば良い。  </p>
<p>固定ページでは日付けも表示したくないところだが、<code>date:</code>の項目を消してみるても、ファイルを更新した日付けが表示されてしまう。<br>themes/landscape/layout/page.ejsを見ると、post.ejsと同じ_partial/article.ejsがレイアウトとして使われていた。  </p>
<p>_partialディレクトリ下のarticle.ejsをarticle-page.ejsという名前でコピー。<br>4行目の  </p>
<pre><code>&lt;%- partial(&#39;post/date&#39;, {class_name: &#39;article-date&#39;, date_format: null}) %&gt;
</code></pre><p>を削除。  </p>
<p>page.ejsの  </p>
<pre><code>&lt;%- partial(&#39;_partial/article&#39;, {post: page, index: false}) %&gt;
</code></pre><p>を</p>
<pre><code>&lt;%- partial(&#39;_partial/article-page&#39;, {post: page, index: false}) %&gt;
</code></pre><p>に変更した。  </p>
<p>希望通り、日付けが削除された。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Hexoでは固定ページを作る際、コマンド<code>hexo new page （ページ名）</code>でsource/（ページ名）下にindex.mdが作成される。<br>tagsやcategoriesは使えないようになっている。<br>コメントを禁止にするには、Fro]]>
    </summary>
    
      <category term="Hexo" scheme="http://pagent.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HexoやOctopressのトップページを全文表示ではなく概要表示にする]]></title>
    <link href="http://pagent.github.io/2014/11/29/excerpt-separator/"/>
    <id>http://pagent.github.io/2014/11/29/excerpt-separator/</id>
    <published>2014-11-29T04:37:03.000Z</published>
    <updated>2014-12-11T21:42:34.000Z</updated>
    <content type="html"><![CDATA[<p>Hexoでトップページを表示した時、複数の記事の全文がだらだらと表示されているのは見づらいと思い、前半部分を抜粋した概要表示にしてみた。<br>やり方は簡単で、記事ソースの適当な箇所に<code>&lt;!-- more --&gt;</code>というタグを挿入するだけ。  </p>
<p>WordPressやMovable Typeでは、200文字など決まった文字数で自動的に抜粋してくれたりもするが、その方法はちょっと分からないので、手動で挿入した。<br>タグを挿入すると<code>&lt;!-- more --&gt;</code>より前の部分だけの表示になる。<br>続きを読むためのリンクの文言「Read More」はHexo作業フォルダの_config.ymlではなく、themes/landscape/_config.ymlなどテーマ毎の_config.ymlで変更出来る。  </p>
<p>Octopressの場合は_config.ymlの<code>excerpt_link:</code>でリンクの文言を変えられる。<br>また_config.ymlの<code>excerpt_link:</code>で、抜粋するためのタグ自体を<code>&lt;!-- more --&gt;</code>から別のものに変更出来るようだ。  </p>
<p>ーー<br>（追記）<br>概要表示にはしてみたが、全文表示の方が都合の良いことがあったので、あとで全ての記事から<code>&lt;!-- more --&gt;</code>タグを削除した。<br>_postsで端末を開き、下記コマンドですべての.mdファイルから<code>&lt;!-- more --&gt;</code>を一括削除。</p>
<pre><code>$ perl -p -i.bak -e &#39;s/&lt;!-- more --&gt;//g&#39; *.md
（すべての.mdファイルに拡張子.bakをつけてバックアップを取り、ファイル内の&lt;!-- more --&gt;を削除）
</code></pre><p><code>&lt;!-- more --&gt;</code>が正常に削除されたことを確認後、.bakファイルを一括削除した。  </p>
<pre><code>$ find . -type f -name &quot;*.bak&quot; -delete
（拡張子が「.bak」のファイルをカレントディレクトリで一括削除）
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>Hexoでトップページを表示した時、複数の記事の全文がだらだらと表示されているのは見づらいと思い、前半部分を抜粋した概要表示にしてみた。<br>やり方は簡単で、記事ソースの適当な箇所に<code>&lt;!-- more --&gt;</code>というタグを挿入するだけ。]]>
    </summary>
    
      <category term="Hexo" scheme="http://pagent.github.io/tags/Hexo/"/>
    
      <category term="Octopress" scheme="http://pagent.github.io/tags/Octopress/"/>
    
  </entry>
  
</feed>
